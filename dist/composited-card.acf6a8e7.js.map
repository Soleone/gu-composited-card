{"version":3,"sources":["../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/lib/modify-template.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","node_modules/@juggle/resize-observer/lib/utils/prettify.js","node_modules/@juggle/resize-observer/lib/utils/global.js","node_modules/@juggle/resize-observer/lib/utils/scheduler.js","node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","node_modules/@juggle/resize-observer/lib/utils/element.js","node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","node_modules/@juggle/resize-observer/lib/ResizeObservation.js","node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../src/directives/style-map.ts","../src/directives/unsafe-html.ts","src/templating.js","src/styles.js","src/composited-card.ts"],"names":["POLYFILL_CONSOLE_OUTPUT","prettifyConsoleOutput","fn","Object","defineProperty","value","global","window","CATCH_FRAMES","requestAnimationFrame","observerConfig","attributes","characterData","childList","subtree","events","rafSlot","Map","resizeObserverSlot","scheduled","dispatchCallbacksOnNextFrame","runSchedule","t","frameCallbacks","resizeObserverCallbacks","forEach","callback","push","clear","_i","frameCallbacks_1","length","_a","resizeObserverCallbacks_1","Scheduler","_this","stopped","listener","schedule","prototype","run","frames","scheduler","set","ResizeObserver","elementsHaveResized","start","stop","observe","cb","observer","document","body","addEventListener","MutationObserver","name","disconnect","removeEventListener","rafIdBase","Error","handle","AnimationFrame","cancelAnimationFrame","delete","ResizeObserverBoxOptions","DOMRectReadOnly","x","y","width","height","top","left","bottom","right","freeze","fromRect","rectangle","isSVG","target","SVGElement","isHidden","getBBox","_b","offsetWidth","offsetHeight","getClientRects","isReplacedElement","tagName","type","cache","scrollRegexp","verticalRegexp","IE","test","navigator","userAgent","parseDimension","pixel","parseFloat","size","inlineSize","blockSize","switchSizes","zeroBoxes","borderBoxSize","contentBoxSize","contentRect","calculateBoxSizes","has","get","cs","getComputedStyle","svg","removePadding","boxSizing","writingMode","canScrollVertically","overflowY","canScrollHorizontally","overflowX","paddingTop","paddingRight","paddingBottom","paddingLeft","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","borderLeft","borderLeftWidth","horizontalPadding","verticalPadding","horizontalBorderArea","verticalBorderArea","horizontalScrollbarThickness","clientHeight","verticalScrollbarThickness","clientWidth","widthReduction","heightReduction","contentWidth","contentHeight","borderBoxWidth","borderBoxHeight","boxes","calculateBoxSize","observedBox","BORDER_BOX","skipNotifyOnElement","display","ResizeObservation","CONTENT_BOX","lastReportedSize","isActive","ResizeObserverDetail","resizeObserver","activeTargets","skippedTargets","observationTargets","hasActiveObservations","resizeObservers","some","ro","hasSkippedObservations","msg","deliverResizeLoopError","event","ErrorEvent","message","createEvent","initEvent","dispatchEvent","ResizeObserverEntry","calculateDepthForNode","node","Infinity","depth","parent","parentNode","broadcastActiveObservations","shallowestDepth","callbacks","processObserver","entries","processTarget","ot","entry","targetDepth","resizeObserverCallback","call","splice","callbacks_1","gatherActiveObservationsAtDepth","sizeCache","observerMap","watching","updateCount","n","getObservationIndex","i","process","ResizeObserverController","connect","detail","options","box","unobserve","index","indexOf","arguments","TypeError","Element","toString","artQualities","normal","high","best","layerQualities","loadingTemplate","html","baseArtworkLayersTemplate","resolutionSettings","useHiResAssets","protoId","mythicImageLayersTemplate","qualityName","highDpi","lowDpi","nonMythicImageLayersTemplate","rarity","god","textLayersTemplate","mana","effect","attack","health","ch","cw","isACreatureOrWeapon","RegExp","crammedTextMode","split","fontSize","lineHeight","headingText","css","bodyText","white","black","boldOutlinedText","getStyles"],"mappings":";;;;;;AoBAA,AQAA,AXAA,IGAIgE,AQAAsG,AXAAtK,GWAG,GAAG,iBXAiB,CGA3B,EHA8B,2CWA9B,KXAA;AkBcA,ACAA,ArBdA,ARmBA,APnBA,ACAA,ACAA,AIkBA,AGAA,ALAA,ACAA,AFlBA,AUAA,AQAA,AGAA,AUAA,ATAA,AIAA,AEAA,ADAA,AEAA,ANAA,ACAA,ALAA,AJAA,AoBAA,ADAA,IhBAIiE,AIAA2F,AHAA/E,AJAAvE,KIAK,CJAC,EIAE,CJAC,MGAM,CHACC,EGAG,ACADuE,EGAE,EPAX,COAe,CHAhB,EAAkB,CJAC,GGAI,KIAK,GPA3B,GAAgC,UAAQ,EAAxC,GAA6CvE,MAA1D;APkBA,AHCA,AalBI,AYDJ,ARCI,AFDJ,AKCA,ANDgC,IMC5BgK,KNDmCzF,EDC1Bb,AIAA2F,IHDgC,WDCzC,AOAsB,CPAG1F,ACD4Ba,CDCrD,COAyB,CPAGZ,CAA5B,AIAA,CAA8B0F,CJACzF,ICDI,CDCnC,EAAsCC,COAD,AND8B,KDCnE,AIAA,EJA8C,AIAA3C,MHDkCoD,EGChF,EAAwD,EHD5B;AaAhC,ACeA,A7BfA,ADmBA,AGAA,ALGA,ACFA,AgBlBQ,AGDR,AUAA,AdAA,AKCQ,AIDR,AEAA,ADAA,AFCI,AIDJ,ANAA,ACAA,ALD6F,ALC7F,AEDA,AmBEA,ADDA,CjBAC,AEDD,GOCIgG,ACAAC,AJAAd,ACAAI,AVAApK,EWCIuK,AUAF8E,GjBAOpL,AIAA4F,CJAL,CDDG9F,AQCP,EPAaE,CAAT,GiBAS,GAAGqL,EbAZ,CIDe,EJCM,AKDJ,AJAA,ATAA,CYAE,AFAD,CFClB,CKDoB,AJAA,ATAA,CUAC,MPA5B,AkBCuB,ElBDa,CSAE,ACADvE,AbAA9K,ESAE,ATAZ,CUAa,CGAb,AbAc,EaAE;AhBD5C,AHAA,AHAA,AaGQ,ADDJ8D,AaDJ,AREQ,AIDJ,ANDJ,AOCI,AJAA,ACAA,AVAA7D,EGAA6D,AHAA7D,IaAI,EbAE,CICGgE,AIAA4F,ACDFG,ACAAA,AVAA9J,CICH,CQDK0K,ERCI3G,CAAT,SIAA,ARDJ,CAAsBjE,EGAE,AKCE,ARD1B,CGAyB,CKCrB,ARDsB,CaAb8K,CDAb,CAA6BlG,ECAzB,CAAJ,EAAoB,CDApB,CZAA,CGAwB,ASAa,CTArC,AHAsC,GGAG,QMAlBqF,ACAAA,IPAvB,AMAO,ACAA,CDAqB,ACAA,UDAUC,ACAAA,EDAV,ACAA,EDAc,ACAA;ASF9C,A9BoBA,AGCA,ALrBA,ACAA,AgBIQ,AGFR,AUAA,AdCIpG,AKCI,AIDA,AEDR,ADCQ,AFAJ,AIDJ,ANAgD,ACAA,AVCxC3D,AEFR,AkBCA,EjBCI2D,EcDApB,AjBCIvC,EWAA,ECAI6I,CRCC9E,AIAA4F,ARDA,EaAEiB,AJDwCb,ACAAA,AVCxC,EYAE,ADAFK,AFD0C,ACAA,CNEjD,AKFkDX,ACAAC,EECtC,CRCC3F,CaFH,CJCV,EIDc,CbEd,CODA,AXAmB,GGAC,CAAC,AKCrB,ACF+C,CECzB,AFD0CrC,ACAjB,CAAkBA,CFEvC,EAA1B,CSF0B,CRAqB,CCAA,EDA0B,CEC7E,AFD4C,ACAkC,CAAlC,CPCpB,AQAc,CRAtC,GAA0C,aAA1C,ASAkC+C,MAAlB,CAAZ;AREA,AaFJ,AdCH,AaFD,ARGQ,AIDA,ANFR,AOEK,AFAG0F,AFF6E,ACAC,AVCzD,AsBH7B,CnBCA,AkBCA,ElBEGxG,AMFQ,ACAA,CCEHwG,AFFJ,ACAA,EYFJ,GlBKanG,AIAAnB,AIDA4B,ADAA,EMDAlC,CNCG,CXDoB5C,EIE5B,AQDA,CDAYyK,CHCZ,CJAcpG,AQDAS,CUJtB,CdKwB+E,EcLxB,ElBKQ,AQDA,CKDJ,CAAwBnI,ANCZ,CRAW,AQAI,EWJ/B,CAAA,ILGI,ATEI,AGDQ,EMDsB,ANCE,AXDX,OsBH7B,CAAA,uBnBIgCsC,wBAAwB,GAAG,EAAhC,CAH3B;AdqBA,AGtBA,AYMQ,AGHR,AUCQ,ATEA,AIDA,AEFR,AHEY0G,AIFZ,ANAC,ACAA,ALFD,ALE8D,AED9D,AmBKA,ADHA,CXHA,ACAA,GHEIpB,AQAA4C,AVFAlH,EMIQ0F,AUEN8E,ADHAjC,EHAMJ,CbEC7I,AIAA5C,AIDAgF,GRCL,ACLI,CMIO,CUEL,CjBDK,AODE4D,ANJN,EYGM,ATEb,AaCSiF,CJHKxN,AGAJ,EhBEMoC,AIAAzC,AIDhB,CRCA,AgBFa,EbDE,AKEIwH,CKDf,CZHapE,CEEC,ECGlB,AIDwB,CKDC,ALCA4B,CKDzB,CZHO,CYGqB,AIGf,ChBNY,EUEE,CRAC5B,EQAE,EHE9B,ELFkB,EAAkB,IQAIoG,KAAV,EAAiB;AXI/C,AGHJ,AUCQ,ADFZ,ARIK,AIDG,ANHR,AOEI,AFDoC,AIApCiB,AVFA,ALAsC,AsBD1C,AFIEqB,EAAAA,CpBHE,EWEY,CECRtC,AFDA,ANFArG,AiBDR,EFIQ,ChBEKN,AGHF,AKEEiC,CLFD,AaCF,CPAG,ARHA,CYGK,AZHJ1B,CDKN,AgBHa,CPCL,CAAZ,CTEgB,AaFEsI,EZHT,CAAT,EDKqBlJ,ACLF,CDKf,AQDA,CULR,ELIkB,ALCWgF,CKDG,AFDlBtH,AOHd,IfGkBkD,AKEgB,CAAC0B,AGF/B,KRAQ,CAAD,IACA,AeJX,CfIY,AeJZ,EVKQ,KULR,CAAA,wBfI8B1B,CeJ9B,CAAA,CAAA,GfIY,CADD,IAEAiC,gBAAgB,CAACjC,IUDV,CAAN,CVCe,CAAhB,CAAyByE,OAAzB,KAAqC,QAF5C;AlBmBJ,AefQ,AGDP,AUDQ,ALCD,AEHR,ADEI,AFCC,ANJG,ALEJ,AEFJ,AkBGEkE,CbHF,AcIA,CDDEA,CTHE,CGCApC,AZDA7K,EWGI2K,AOAF,EfHMnJ,AeGJ,ChBEKwC,AQDAiC,ADCJ,AXHEvG,CKFG,CLEV,AoBDiB,CPEP,CRHG4E,EDKT,ASFSkG,CXHD,EEKM,CSFD,ARHE,AHAJ,CWGGI,ARHEnG,GDKGX,AQDnB,CVJgB,CAAxB,CEKsB,AQDQ4E,CPJb,EDKgB,ACLzB,CQGJ,CDC+B,AEHJ,CFGKzC,ERCEpC,AUJJ,MVI1B,MQDA,AEHsC;AVKtC,AYLR,ARII,AIAC,AEHD,ARDJ,AKKQmG,AIJJN,AVFI,ALGP,AEFD,AoBDA,ADQA,ADJEwD,CpBNF,CoBMEA,EdHEjI,AKKI+E,ATLJ/J,EYCI6K,AQFR,ADQMmE,ADJA,EfJ6BrL,AeI3B,ChBEKK,AIDFmF,AFJF,AKKI,EUEF,CfPC,AKKIzG,CNNwB,CDMhC,AiBEMoM,EfPEtO,ADD2Be,CDMtB,CCNwB,AiBA7C,ChBCY,ADDkCoC,CMMtB,CGJD,ARDvB,AKKyBuG,AWNzB,ClBM0BpG,EUJA0G,ATFlB,CHCiB,CEKJ,EFLO3K,AoBD5B,ClBMiC,AID7B,AcLJ,ADQkB,GPNd,AHIY,CAAqB,CPAC8D,EiBEtC,GjBFQ,COAQ,CAAR,ETL2B3D,AoBDnC,CPEoBgB,AOFpB,OPEI,CAAwB,SAAS+J,GbDrC,YaC4B,CAAyBpB,EAAzB,EAA6B;AjBMlD,ATaP,AedQ,AGFR,AUDQ,ATEP,AMHG,ADCA,AFGII,AIJAJ,AVHA,AHER,AmBOA,ADRqB,CZJO,AYI5B,EZJA,CDQIZ,AIEIgB,AIJAJ,AbDJ1J,EJMS,AgBLL6K,ACAE,AMMJmE,CNNK5F,CECC,AZJyCzF,CQI1C8G,AFGE,CAACP,CPACzK,AiBEJ,GhBTgD,AgBS7CoP,CJLK7N,AHDF,ADCb,ETGiB,ASHF,ARJ2CM,CDOxC0C,AUJF,AZDF,CSKV,ANPwD,CSG5D,AHIoB,AIJhB,AVHyDL,CEK5C,AQFI2H,AbDJ,EeET,CbGG,AGFU,CHEI,CCPrB,CMOA,AIJA,CECwB,AFDA,CXIjB,AOAkB,AIJzB,AMMU,CjBFV,CWJ2B5B,EjBKK,AiBLH,CJI7B,AIJ8BN,EjBMjC,ASJgC,AIEG,AUExC,EJLQ,EAAoC,CNGpC,MIJ2B,CAAiB/H,MAA5C,MjBMqB,QAAQ,CAAC,SAAlC,IACC,aAAa,aAAa,CAAC,SAFzB;AMAF,AGFD,AUDQ,ADHZ,AJII,ANJJ,AOGQmJ,AFGAV,AIJAJ,AbFezJ,AoBMvB,ADGA,ADJA,ElBLuBA,EIAnB+E,AOGIwF,AFGAV,AIJAJ,EAAE,AOIV,ADGMuF,ADJAhC,CLHK5D,EHEAe,ACDE,AFGA,CAACJ,CJFDlB,CUDK,AfHe,CWGhB,CAAT,AXH2B,AoBMnC,ELHsB4D,AXHN,CKMR,AWAR,CpBNqB,CIAF,CKMK9C,ASDJ,CLHZ,CAAkB0B,AMOJ,CVHd,ASDe,CECvB,CLHkB,AKGlB,ADGyBuD,CJNO,EVC5B,AKAA,AGFI,CREuBzK,AQFE,CAAzB,ETFR,ASEoCsF,EAAE,CRElC,AQFmCL,AOIvC,CAAA,CfFuCX,CeIvC,EDC6B,QdLzB,CQFgC,CREgB,AQFErH,MAA9C,iEECU,CAAN;AnBOZ,ATfA,AkBUQ,AUDC,ALCR,AEHGmI,ARDJ,AOGQiB,AFGH,AIJGf,AVJA,AHCiCxJ,AoBSzC,AFHE4M,CRVyB,CVIc5M,AkBMvC4M,CRVF,CNKI7H,AOGIwF,AEDAf,AMOJkF,EvBAE,AiBPI,CAACtF,CKGH,CbDKlF,CMDC,AOEJ,CfPK,CAACV,CQKC+G,AOCM,EbAf,ALL8C,AmBUtC,EhBXD,AHCyC,CKKlCrG,ADJJ,COGK,CAACsG,CPHH,ADFI,AHCJ,CGDK/G,CPWH,CSLf,CQFA,CjBOkB,AiBPI5C,EVJtB,EQKA,EfMwB,CiBPxB,CjBOR,AiBPsC,CTFtC,QSE+CiK,CDD3BjK,OAAhB,CAAwB,ICCU,CAAuBkK,EAAvB,EDDDH,ACC4B,eDDrC,CAAyBpB,EAAzB,EAA6B;A/BazD,AqBRInG,AGDI,ASLR,AFEQ,ARDR,AOGK,AEDO,AVJP,AHAyDpD,AkBO5D4M,EhBAExJ,AFP0DpD,AkBO5D4M,EdLE7H,EvBaE,AuBbA,AcKA,ENJMwE,AMIJ,CbDKhB,ADJH,CQCI,ACCEuC,CDDD7B,AZHwD,AkBKhD,CLDL,CAACH,AbJsD,GnBezD,CqBRG,AFPE,CEODhF,CrBQD,CwBTX,CQFQ,EhCWO,AwBTIyE,AQFf,CDDA,ARDH,CQCoBrH,ARDF8D,ASEI,CXG3B,GAA2B,AELtB,CvBaU,AuBbavF,CQCpB,C/BYZ,EwBTsC,EOHE,CAAhC,CPGkC0D,CHCDY,AUJE,MRDJkB,GFKR,EAAqB,IELpB,IAAoBxF,eAAOwF,SAAP,CAAiBC,MCIF0D,GDJ1D,CAAT,OCIQ;ATMF,AfUN,ACLA,ACsBA,ACxBA,AUNA,AQDQ,AGDA,AUFAkD,AHDI,AHIRpM,AIHY,AbL+DO,AkBQ7E4M,ETAEnN,ATR2EO,AkBQ7E4M,ItBIW,AsBJP,ETAI,ASAF,CbDKhE,AICFmB,ATR2E,EEQvE,AFRyE,CaKpE,GjBOd,AMJa5G,CNIG,MaJlB,CAAqBuG,EJDjB,GAAwB,AIC5B,EPAW,CAAoB5F,SAAS,CAACV,CAA9B,EAAiCU,SAAS,CAACT,CAA3C,AaHkByI,EbG4BhI,KaHrD,AFAkC+G,CEAD,CFAG,CAAC7G,CXGyB,CAACV,AaH/D,EAAuC1C,EFA3B,CXGL,EAA+DkD,CWHvBsG,EEA/C,GFAQ,EAA8C,CXGyB,CAAC7G,MAAzE,CAAP;ANSN,AMRG,AGDO+B,AUFP,ADJL,AFGS,ARFT,AOGI,AFGH,AIHmBgE,AVLhB,AHDiB,AoBUrB,AFLuB,CTTvB,ATIA,AkBKA,CtBYE,CMVE,CEJApE,ECKQI,AFPJlB,AiBSF,EjBTI,CQKCgG,CEASd,CVLPtF,CUKS,CjBWpB,AiBXqBgF,CjBWT,AeXV,CSIW,CfFO,CFPlB,CEOoB,ADLN,AgBOA,CfHc,AeI9B,ExBMA,AQdmB,ERcU,GiBXX,AOIF,CPJmBnI,COMnC,GhBT6BsE,ASGX,CjBWlB,AiBXwC0F,EjBWM,AiBX5B,ETHC,EAAiB;AYYtC,ApBGI,ADiBJ,APjBA,AiBTYtF,ADN4B,AOIvC,AEAgB,AVNb,AHAJ,AoBYE,CTjBF,GXKItF,ELkCE,AU1BMsF,AFRSlB,EPiBb,CQfuCe,ASE/B,CbJN,CmBaCuJ,EnBbE,CACT,CKOiB,AQDA,CMMJ,CvBIA,ASTM,AFRS,ECEyB,CAACxJ,ADFvBf,EPiBb,AOjBe,AHAxB,CGAyBC,CHElC,CLgCqB,AShCsC,GTiC3D,CAAC,ASjC8D,CJFtD,EIE4C,AJCrD,CIDoC,CDFpC,ERmCA,EAAkB,CClBlB,EAAqC,EDkBrC,IKnCS,CLmC4C,CK/BrD,cAJS,EAKT,gBALS,EAMT,oBANS,EAOT,OAPS,EAQT,SARS,EAST,SATS,EAUT,WAVS,EAWT,WAXS,EAYT,UAZS,EAaT,MAbS,EAcT,OAdS,CAAb;AiBgBA,ArBEM,ADkBA,AbjBC,AUXP,AH6BA,Aa5BI,AGH4B,AUA5BvC,ADJJ,AFGQ,ARHkE,ASMtDwH,AVRhB,AHgBJ,AoBHE,AFHK,CdRP,CTkCM,AoB9BFxH,EDJAsH,AdcAlJ,CKVI,CvBaK,AqBnBsCoE,AeUtCwI,CEDK,CzB2BN,AiB/BAnC,CjB+BC,AO3BFxH,AkBKT,CPNkBmG,CbQT,CJEC,AiBVU,CAACL,CbQT,CYXK,ChBaH,AmBZE,CAACxH,AKGD,CtCUO,A8BdH,ATLyC,AHgB7CtB,CcdC,AMajB,CRVM,ChBaI,AdCgB,AqBnBsCiE,AHgBpD,AkBNc,CtBSlB,AkBjBY,CnBkChB,AQpC8D,AHgBpE,CLoB4B,AO3BxB,AYPJ,AXFqEE,AeUtC,CEDb,CLHd,CjCa8B,AiCbLpC,AFET,AOQlB,CtCGiC,A+BXGrB,ElB4BhC,AuB1B+BkM,CvB0BF,AwBtBJ6B,CNNX,CAAuB/D,CEFvC,CFEgB,CVRhB,AgBciC,CJRE,CpB8BjC,AyB3BY,EzB2B0B,AyBnB1C,EtCE0B,GaiBtB,CuB1BoC,CvByBe,AbhBH,AiCbL7G,CpB+B3C,AyB5BY,EAShB,GLZqC,CIQe4K,CJRG5C,CjCa7B,AsCVV,EAUhB,CDL0D,CrCMvD,EiCdkC,EAA2B,EjCcvD,CAAC,AsCXM,EAWhB,QAXgB,CAAlB,GtCWK,CAA4C,OcFrC,CAAN,iBdED,KACG,SAFD;AmCFP,ArBGK,ADkBC,AbfN,ACmBO,AUtBP,ARZA,ACAA,AFUO,AkBRN,AGAI,AUHG,AHDA1C,ACGS,AVRb,AHgBJ,AoBMA,ClB7BuB,EAAvB,CUYQA,AZWJlJ,EjByBS,ACxBA,A4BZH,AQiBJ,CRjBK4I,CGCCqD,AKgBJ,CjBtBG,EAAEhI,AiBsBF,CpCLQ,EDwBE,CCxBC,AoCKP,ErCmBS,AgCnCH,CAACpD,ChCmCf,AoC3BY2N,CPTX,CAAiBjO,CTLD,AHgBF,EhBCS,A+BXnB,AIQa,CnBEA,CGhBG2D,ESKpB,CGCyB,AHDA,AZWJnE,ChBCQ,A+BX7B,C/BW8B,C+BXF,AfUX,AoBMV,CAAA,CpBNf,ChBC0C,CAAC,E4BZDyK,ATL7B,EiBsBF,CAAmB,ADRWgE,CnCGH,AmBjBM5K,EnBiBP,CAAN,CAAsB,AmCHN,EhBdG,AiBsBb,CjBtBcO,EnBiBpB,A4BZE,C5BY0B,A4BZHsG,AQiBhB,CpCLT,CAA8B,A4BZ5B,EAA2B,E5BYrD,KmBjBqC,GAAwB5J,MAAzD,CAAP;AciBJ,AtBqBM,APnBA,ALwBN,ACxBA,A+BZY,ADLZ,AFIY,ARJZ,ASOa,AVRZ,AHgBD,AoBME,CjB7BF,AgBaA,ADEO,CEcL,ENrBEqK,AVAAjG,AJeAhF,EZES,EgBjBL,CgBqBC,CRjBOyK,AQiBN,ChBrBC,CWKO,CfUlB,Ecfe,AFIM,CGCCwB,CKgBpB,CNrBgB,AFIM,AQiBN,GhBrBGhH,CUACnF,AFIM6J,CQiBL,ELhBL,ADLA,CCKc,CDLhC,AMqB2B,GhCJrB,CAA+B,AgBjB1B,CgBqBqB,ChBrBCzE,AgBqBA,MAAN,CAAa,EhBrB7B,EAAiCC,QgBqBjB,CAA0B,EhBrB1C,EAA8C,CgBqB9B,CAAzB,GRjBsB,CAAwBqF,EAAE,CAAC7G,MAA3B,CAAZ,4CGCM,CAAN;ACUZ,ACCA,ArBEI,ADmBE,APnBJ,AIPF,AFNA,AGaA,AYVI0E,AUFK,ADLT,AFIY,ARJR,ASOK,AOcR,CAFU,CfZPA,AeYJ,ENnBI6C,CDFI,CGgBF,AxBJA,AYVEjG,GRiBC,CgBbOyF,EEJJ,GAAG,ClBiBX,AkBjBJ,AVAkB,GYcC,ApBGA,ASVE,CAACtJ,COHK,ARJJ,CYcD,AxBJA,EoBNQ,CpBML,CwBIC,ApBGtB,AQjBwB,CAAxB,ECOA,ADP2B,CCOCoH,GWOV,EAAtB,GXPI,GAAuC,YAAY,qBOHHgC,EAAE,CAAC7G,MAAzB,CAAlB;AIYZ,ACAA,ArBEG,ADmBG,AH3BuB,AH2BvB,AHzBN,AmBJQ,AOHI2G,ARLqBrF,ASQ5B,AbOL,AmBDO,GvBPe,AiBZlB,CjByBF,AQpB+BA,AJe7BhF,EdHE,A0BPMqK,AOSCmE,EdNDzJ,ChB6BI,GgB7BA,COHG,CAACxE,ARLuB,CCQxB,AcMG,EfdwB,CQKlC,ARLqB,AecR,CjCFN,A0BPMiK,G1BOH,EGyBhB,AuBhCM,AOSmB2D,C9BuBC,CHzBN,KGyBpB,CWtB0B,CXsBsB,EWtBnB,ImBDA,GjCFH,GAAhC,EcG+C,QKPX,KAAKzK,MAAtB,EAA8B,KAAKsE,WAAnC,CAAX;AYSR,ArBIE,ADiBI,AH5BN,ACSA,AJmBE,AJxBF,ACAA,AQJA,AqBJQ,ADLR,AFKYuC,ARNsC,ASSjD,AbOG,AoBOJ,CP9BA,GCQIW,EGgBE,A5BqBA,AK5BA,AkBJMX,AZUJxK,AoBOF,C1BbC,CqBJK2D,AHAE,CAAC4E,KGAG,CDLH,AdeX,AoBOW,EpBPI,CcfD,AMsBA,C/BeC,C4BrBC,E5BqBE,C4BrBC,CGMA,CRjBX,CGAkB2D,CEWH,CHhBCd,AFKM,CELhB,EAAa,CpBS/B,CqBJY,CEWW,CvBNnB,CuBMJ,A5BqBoC,AK3BR,CL2BS,C0BhCK,E1BgCpB,AK3BlB,CL2BqC,CK3BJ,CqBL7B,EAAyC,CrBK7C,CL2B2C,CAAC,GK3BU,CL2BpC,CAApB,EK5BF,akBJmDZ,EAAE,CAAC7G,MAApB,EAA4B6G,EAAE,CAACvC,WAA/B,CAAtB;AKaZ,AzBPA,AFCO,AeJC,AUFI,ADLR,AXHJ,AHkBQ,AoBON,AFdK,GJRFiD,CXHD/G,EbcS,A4BHAwI,EbDDxE,AeeJ,G9BXU,AwBXd,CCKc,AKiBN,E9BXS,CwBXJiD,AMsBF,CLjBOa,ADLJ,ExBWO,CwBXJ,CAAjB,CXHiB,EiByBE,CNtBG1K,AXHF,AiByBA,C9BXH,AyBNH,CAAc,CzBMzB,AeJwB,CAAC,GaCM,EbDDoC,CFVHA,AeWO,CAAC,EEc3B,CAAuB,CffP,CAAvB,AFVgB,EEUsB,AFVJ,EiByB3B,CNtBqBhC,AMsBlC,KNtBwB,EAAtB,4DCKc,CAAN;ApBgCN,AZIC,AO5BP,AGKA,AJmBE,AKkFK,AW/GK,AUFH,ADLLuJ,AFIQ,ARNR,ADDA,AHkBC,AoBOH,AFdA0B,EJRE1B,AMsBF,AFdA0B,InCgCW,AMJP,AKkFO,AUxHL1H,AgBwBF,CAAC,EzBcM,CmBpCD,AFIIwF,ATPJ/G,AiByBV,Cffe4E,EtBiCG,AqClBP,CzBcP,AmBpCU6C,CAAZ,AVFa,CrB0CM,AoB3CL,CAAChH,CpB2CZ,CMJY,CetCG,AcSoB,CNHf,ClBkHE,ELlFL,AuBhCM+F,ATP1B,CTyHuD,AUxHhC,AgBwBzB,ChBxBE,CCSQ,CDTkB,ECSMnF,GhB6BlC,CgB7BU,ChB6BuB,IuBhCvB,EAAmC;AhBe7C,ADkBG,ANAD,ALpBG,AUuGL,AWhHO,ASPL,AFIYmF,ARPgBjF,ADAxB,AiByBN,AFdA2H,CvBkBF,CD6FE,A0BjGA,AFdAA,CJRG3B,CzBoCD,AevC4BhG,ERqB1B,AZFO,AoCMP,CAAC,CRlBSiF,CTPH,EWGT,AMsBF,E1BiGW,AU1H4B,CV0H3B,A0BjGA,CNtBG5I,ClBkBf,AZFqB,AoBnBqB,ADApC,AeSkC,C7B8BzB,AevCe,ERqBhB,AZFU,AUuGb,CLnFO,CKmFU,EkBnHC,CQkB7B,C1BiGW,CVvGoB,A4BZCmJ,ClBmHU,KVvGL,I8BhBZ9I,C9BgBpB,A4BZS,GEJC,EAAb;AlBmBA,AdCG,AKpBP,AMiBA,AJoBM,AJvBA,AS0GF,AqBnHI4J,ADJP,AFIY,ARRmC,ADCpC,AHiBRxL,AoBQF,AFdA8M,CJZF,CdkBI9M,AoBQF,AFdA8M,IpCWW,AOiBP,AJvBO,AmCSP,CAAC,CxBJC,EOrBQnJ,CHiBH,AoBQX,C1BiGU,CErGC,CIJG,AoBQF,E1BiGV,AS1HkB,CAACU,CduCL,AWtBd,ClBKsB,COiBN,CcvCJ,CrBuBZ,AGPE,CHOD,AGPwB,CWKrB,APkBgB,EcvCQ,GPqBH,EPkBT,CPhBhB,COegB,ActCR,CrBwBP,CqBxBoC,EiByBvC,CxBJE,CdEA,CcFoC,CdInC,GAAA,GAAiB,IAFlB,EAGC,EiCnB4BxC,IjCmB5B,GAAoB,AiCnBjB,CAAiC,GjCgBrC,CiChBI,EAAuC8B,EjCmBR,IiCnB/B,EAA+CgI,OAA/C;AnBeF,ADkBN,AbbM,AOaA,AJlBJ,ACNI,AFIC,AUuGD,AWjHE,AUFH,AHAI,ATPO,AiByBd,AFlBwC,CAAD,CjCcvC,AmCIA,CL1BE,EHAI,CjBwCF,ANAA,AHxBO,AFIA,AkCRP,EbFM,CvBiBC,CsCDH,C1BiGC,A0BjGA,EnCJT,AoBZepD,CvBiBC,AGJZ,CIiBS,A+Bdb,CAAc,C/BcC,ALpBO,CUuGlB,CZhGiB,CIXjB,AFIqB,CKoBN,AHxBM,CJWrB,AGLJ,EHK0B,AOaX,AJjBS,ADHK,GWoBJ,AyBdzB,CAA0B,CfhBhB,CV+BR,AXrBuB,AqBVOtD,CV+B7B,AXrBiC,CoCMpC,CnCJA,CDFuC,CCInC,GUiBF,EAAkB,AXrByB,AqBVnC,EpBYV,EAE0B,ADJuB,CqBVFD,IAAI,CV+BjD,AU/BkDC,IrBUO,CWqBR,CXrB1B,CAApB,GqBVK,IACG,KAAKsD,gBAAL,CAAsBrD,SAAtB,KAAoCF,IAAI,CAACE,SADhD,EAC2D;ATY7D,ADmBA,AbdE,AWPR,AJiBoB,AJrBD,ACKjB,AFAF,AUsGQ,AWhHI,ASRZ,AFKQkF,ARTJ,ADES,AHgBT,AoBSH,AFdC,CEQF,ClCCE,E4BlBEiB,AFKIjB,CvB6BJ,CetCIjF,ET0CI,CVzBO,AiCJVuH,CpCeK,CAAC,AkBVFxM,EdIX,AmBViB,AOHF,C9BmBC,AILZ,A0BdYM,ClBmHH,CT3GI,CoBLP,ADZO,CQSX,C9BmBgB,AGX4B,A2BR7B,C9BmBE,AYgGL,CT3GD,ACKjB,CkBtBsB,AJkBpB,CdKiC,AQqGd,AoBxHA,AdcEL,CAArB,CN0GgB,AwB/GN,CJTY,AdcE,CIlBC,CV4HD,AkBnHIwK,ART5B,ClBsBF,CkBtB8B,CtB4BxB,AIJF,CQoGE,GRtGN,C4BlBkC9B,C5BoBhB,SAFlB,EAE8C,E0BfzB,GAAkC,CEL/B,EAA8BlF,MAA9B,EAAsC;AlBoB1D,ADkBO,APlBX,ANKM,AKbD,AE0BH,AJjBA,ACAA,AmBZK,AUJLlC,ADJA,AFKQwH,ARVsB9D,AJmB1BnF,AoBUR,EhCLE,A2BfEyB,EpBiCS,AbbL,AOaJ,Ae1C8B0D,AJmB1BnF,EbHK,AyBNDiJ,CELH,CnBqCG,AiBhCE,C3BeL,ACAA,A0BfM1I,ChBcL,CkBnBG+K,CAAC,ChCwBG,AkBVA,ClBUC,CgCxBD,AVL4B,ClByBzC,A6BhBc,ADJd,AdcgB,CbHI,AFSpB,A8BhBelK,AHCP,CvBgCM,AyBrCEkK,AFKIV,ARVwB,Cf0C7B,AHjBA,A4BpBE,C3BWO,AFSR,CeNZ,CXuBJ,AyBrCoB/B,AFKZ,CvBgCW,AuBhCMI,ARVK,EjBgBP,AyBNI,C9BmBvB,AIJJ,A6BhBA,AHC4BlH,C9BmBD,AiCpBF8J,C3BeD,AHCxB,CGAE,ADT4D,AE0BrC,CAAC,EPbtB,EAA+B,AOanC,AuBhCQ,ExBcgB,ACkBQ,A0BjChC,AHCsCvB,ChBcpC,CRCkB,CQDe,AmBfE,CjCoBjC,AgCxBkC,CAAC1J,C1BmBf,CwBdhB,CxBe0B,CwBfaqI,EEL/C,AFKiD,CAAClH,CvBgClD,A0BjC+C4B,ADJA2H,CAAC,C1BmBxB,EAEtB,C0BrBkD,CCIf,ADJrC,CFKQ,CGD+C,ADJA,G1BmB/B,EAEA;AQDpB,ADiBW,APff,ANGI,AKbN,AMMF,AJoBG,AJjBC,ACAA,AQmGE,AqBnHE,ADJA,AFKC,ARX+C,ADGhD,AHiBA,ILsBW,AbZX,C8BrBA,GGCIU,ADJAnD,AdcAzI,ClBUC,AKZP,AFQG,ACAA,AiBvBI,CfwBH,CMkGC,CZ/FK,CcLH,AdKL,CKZG,CDQP,CECY,AexBR,CT0HF,AqBnHe,C9BgBjB,ACAc,A6BhBIQ,C3BiBH,ADTH,EFQK,CeNK,CZOH,ADTjB,CSOE,AREgB,AFDpB,A6BhBQ,C3BiBW,AYPM,CZOzB,A0BrB0B,ClBmBH,ATNrB,A2BbyB0K,AdcvB,CcdsB,C3BatB,A4BTyB,ADJrB,C7BoBR,A8BhBI,ADJ0B3H,ClBmBH,CmBfK,I5BSrB,A2BbH,K3BaJ,A2BbqCA,GlBmBlB,EAAnB,ATNiB,C2BbjB,EAA6C,K3Ba7C,IAA6B,OAAO,KAAP,KAAiB,UAAhD,CAFJ;A8BOK,AtBkBK,AbXL,AKXN,AFOG,ACAA,AQmGE,AWhHE,AUHI,ADJA,AFKJsF,ATRA,AHiBA,AHpBR,CVeO,GyBJCA,EKYK,AtBkBkB,AiB9BrB,CAACN,CZSCtI,CfMH,ACAA,AiBvBI,ET0HF,AWhHI,CUHG,C7BgBd,A4BpBeiL,CAAP,EGiBW,AtBkBjB,AVfF,ACAY,AQmGV,AWhHE,AUHcW,AZPd,GcoBkB,AhCGP,CCAf,A0BfI,CAAiBpB,IGDP,C9BgBd,A8BhB4B,CHCxB,CAAwB,CAAxB,EAA2B5B,AZSA,EYTE,CAACN,AZSA,EAA9B,OiBG6B,ILZF,CKYC,ALZgB/H,IKYK,ELZjD,CMI+CiM,CDQC,IAAqB,SCRR,GACzD,KADyD,GAEzD,KAAM,IAAGC,OAAQ,uBHPX,CAAN;AEcV,ArBCM,ADiBF,APfF,ANIC,AW5CL,AJyDE,AJjBC,ACAC,AQmGI,AWhHH,AUHI,ADJA,AFKJ,ARZD,ADII,AHiBAjN,ClBAD,EuBjBH,AOVA,CZ2BIA,EiBGF,A5BoBA,E4BpBE,A7BGA,COeK,ATfJ,AkB3BEb,ADIE,EHiBE,CiBGH,AjBHIsB,CJIH,CREC,ACiBA,Ce5CG,CAACiD,ADIV,CdwCS,CHjBb,CEAe,AYNX,CAAgB,CdMH,CEAjB,AgB3BO,CAAc,CawBD,ArBChB,AREgB,CQFC,KPmBK,AHjB1B,AcN8BhD,CXuBH,KOnBvB,CAA6B,CIJb,EAAoB,CiBGtC,CAAJ,ArBCwC,CPmBzB,C4BpBkB,A5BoBS,GAA3B,CAA+B,COnBxC,KPmB8C,CAAC,OAAtC,CAAf;A4BnBE,ArBCG,ADiBC,APfF,ANKN,AILG,AFJI,AUuGC,AoBvHH,AVPG0E,ADIA,AHgBsC,AHpB9C,IF0CQ,AS1CAA,EpBuBK,CYDP,CDmBO,CQrCA,CcoBH,E7BGE,CQFC,AILwC7E,CiBIvC,AbxBI,EAAE,CAAC+E,ADIb,EcoBE,CAAU,C7BGC,GAAG,EJJS,CgBHkC,CZOvC,AgB3BI,AJoBoC3E,ChBGhC,EoBvBD0E,CJoBkB,CAAoB3E,GhBGlE,IoBvByB,CJoBqB,CAAP,CIpBC0E,ShB2BvB,CAAsB,AgB3B1B,KAA0C,CADrC,ChB4BD,EAA+B,I6BH7C,A7BGiD,C6BHvD,A7BGwD,KAAL,CAAW,CAAX,CAA/B,EAA8C,OAA9C,CAAlB;A6BFH,ArBCK,ADiBA,APfF,ACgBJ,AJhBA,ACCA,AFJF,AUsGQ,AWjHJ,AUHI,AHCJ,ARXIC,ADIA,AHe6E,EfQnF,EUeM,AS1CAA,CJmBA,CXwBF,CuBhCG,C3BgBD,A8BjBIvB,C9BiBH,AoBdE0E,AFTE,ESOA3H,CjB6BA,CCfA,AREA,AwBhBE,ARXE,Cf2CH,A0BjCI,C9BiBV,ASmGO,AU9HI,CQWD,ARXEyE,CnB2BmB,A2BhB9B,ATPD,EduCW,AuBhCE2F,ClBmHD,ENnGE,CAAC,CQFf,AFqGgB,EWjHpB,AUH0BoB,CnBeH,AQzBI,ChB2BzB,ACgBJ,AKmFa,ELnFe,AuBhCE,ARXEjH,CRyB1B,AFqGuB,EqBpHnB,AHCuBmF,GlBmHpB,EqBpH2B,CrBoHH,CU9HR,EQW3B,ClBmHuC,AqBpHnC,AXVuClF,CV8HH,AkBnHExE,CGDG,CHCD,GAAGoK,GRXhC,CV8HoB,CAAe,GU9HO,EV8HtB,CAA/B,AkBnHsD,CAAClK,MAA3D,EAAmEF,EAAE,EAArE,EAAyE;AhBetE,AREF,ADVE,AE0BH,AJhBA,AS2FA,AWzGH,AUHW,ADJR,AFKI,ARdiB,ADOjB,AHeAX,AHnBR,CQRyB,EAAzB,ADKW,CAAP,AJsBIA,EbFK,EFUL,A2BhBIQ,C3BgBH,A6BrBE,AXFE,CWED,CzBqCD,AyBrCP,C7BqBQ,A8BjBM,C9BiBd,GEVmB,A4BPD0L,AHCF,CTPZ,EhBamB,AE0BvB,AuBhCmBnB,GZQG,CAACxK,CbFD,C4BPR,CAAc,E5BOyC,EyBNvC,AZQ1B,CYR2BI,AZQA,EYRD,CAA1B,OZQqCH,QAAV,EAAoB,+DeTrC,CAAN;AEeV,ArBCG,ADgBG,ARxBN,AE0BC,A0BjCM,ADJR,AFKOA,ARXP,ADIO,AHciD,CcnBzD,AVPA,EfsCsD,CAepD,AuBlCMA,IKaA,C9BPC,AgBbI,GSOG,CZOgDF,CbDlD,AgBbN,ChBaO,M8BOM,C9BPZ,CAAc,C8BOC,I9BPf,KACH,GaAiF,CAACG,CiBMlD,CAAC,EjBNyB,CiBMxC,AjBNqED,CiBMlD,IAAnB,CAAtB,EjBN8D,CAAP,IkBAFsM,cAAc,GACzD,KADyD,GAEzD,KAAM,IAAGC,OAAQ;AvBsBrB,APfJ,ADRE,AE2BJ,AJnBE,ASmGA,AkBlHC,ATPO,AHa6F,AHjBzG,GVkBO,CQuBC,CRvBC,AaDD,GZSA,CHAC,CERK,CO2GH,CCpFK,CAAC,AQrCE,CfsBL,ADRK,CFQJ,CSmGX,CSzHQ,CRqCI,CPfG,ADRa,AFQ5B,CUe4C,ARvBf,ECQ7B,CHAmB,CGAC,EDRe,CAAC,CFQZ,OERI,AFQ5B,CERG,CAFL,AFUmC;AgCDnC,ArBAE,ADiBM,APfJ,ADRL,AFQK,ASmGH,AqBpHKtB,ADJR,AVNA,ADRI,AH0BI3L,AHlBR,CVeO,EOkGoD,CoB3GvD0L,AVNAnG,AJkBIvF,EiBOF,AtBiBI,IVfA,CWFC,AkBnBA,AdYI,CLwBC,AKxBAY,CLwBC,APfJ,AgB3BA,ChB2BC,AHAA,A6BrBA,ElBmBE,AQzBAzB,CJkBR,CZSU,C6BFC,AhCEA,GmB3BG,CAACuE,CayBC,EHnBE,ClBmBtB,ADiBM,CAAsB,AVf1B,CmB3BU,CnB2Bc,AmB3BA,GayBxB,CtBiBI,APfI,COeyB,APfX,E6BFS,KtBiB3B,APfI,EOekC,APfX,IAAI,COe/B,APfgC,KAAL,CAAW,A2BjBfsI,C3BiBI,CAAvB,EAAsC,E6BFH,GFfzC,CAAmC,CEeN,A7BEsB,C6BFrD,A7BEsD,E2BjBpD,EEgBF,AFhB2ClI,KEgBtC,CFhBH,E3BiBM,CAAD,C6BDG,A7BCV,a6BDuB,CAAC,KADxB,IACiC,IAAI,CAAC,KAAL,KAAe,aAAa,CAAC,QADlE,EAC4E;ADDvE,ACEH,ArBDD,ADiBM,APfJ,ADPL,AFOQ,ACAN,A6BjBG,ADJD,AFKA,ARXA0B,AJkBItF,AHnBR,EX4BE,AkB3BEsF,CWEA,CfgBItF,EgBMK,AFlBLgK,E7BqBA,CCAC,A0BhBEI,EELE,C7BqBD,ACAH,CDAI,C+BHQ,AFlBL,CAAZ,AVNa,EYwBO,AZxBLnF,InB2BX,AmB3Be,CnB2BD,AeTI,CInBI,AJmBHvE,CYPvB,I3BgBwB,AeTpB,CfSqB,CAAD,CAApB,U+BH2B,SAAD,IAA2B,IAAD,IAAe;AACzE,ACEC,AzBRG,AH0BJ,AJjBK,ACAH,AFLE,AUwGJ,AoBxHE,AFKH,ARXG6E,ADIA,ANNJ,CedA,ClB8IE,AU9HEA,IYwBE,AhCFO,EgCEL,A3BoBA,CG1BQ,AWdL,CjBuBD,CGiBC,AHjBA,C8BHC,E3BoBE,AHjBA,AFLR,AmBlBF,CnBkBiB,AUwGN,CAAC,AU9HE,EAAEN,ClB2BD,CGiBC,CAAC,AKkFN,CU9HS,CV8HY,CsBtGZ,AZ1BM,ElB6BhB,CAAa,AQmGZ,CLlFD,CAAe,AKkFqB,GF5G5C,CACF,AHyBU,AHjBA,CGiBoB,EHjBE,CAAhC,IMTE,EACkB,GwBKlB,I3BoBQ,C2BpB6B,A3BoBzC,CAjBoD,CAmBpD,E2BtB6C,CxBNzC,EAC0C,SwBKW,KFlBvB+E,KAAhC,WEkBE,IACA,IAAI,CAAC,SAAL,CAAe,IAAf,KAAwB,OADxB,IACmC,IAAI,CAAC,SAAL,CAAe,KAAf,CAAqB,MAArB,GAA8B,CADrE,EACwE;AACtE,ApBAF,ADSW,APRT,ANGG,AUVL,ANQE,AFFF,AUqGE,AqBrHAtI,AXTA8D,ADIH,AHaO,AHpBR,CMTA,CPqCE,AZAA,A+BhBE9D,AXTA8D,CTkCE,GbLO,EMHL,AIPA,ANQA,AcVI,EgBQF,ApBAA,EVEE,AQmGA,CErGF,AZAR,AoBzBa,CYyBD,A5BCA,AJDA,CEEC,AkB3BE,CV8Hb,AqBrHc,CjCoBM,AIFpB,A6BlBenE,ECgBT,A5BCS,AgB1BE0B,CY0Bb,AlCIJ,AELF,CFKG,CMJD,AJDkC,EICd,E2BjBpB,CAAyBT,E/BgB3B,CFKE,CEL8D,CFK5C,KAAlB,AiCrBA,EjCqBoC,CiCrBE,EjCqBF,GAAiB,IAArD,EsB9Ba,CWSqC,AXTjB,CAApB,CtB8BsD,CsB9B/B,AcqBewK,CdrBtC,EAA0B,CAA1B,EAA6B,CAA7B,OcqBoD,GACzD,KADyD,GAEzD,KAAM,CFIV,GEJaC,OAAQ,mCFEnB,CAAN;AAGD,ACDD,ArBDE,ADgBC,APfC,ANIA,AUZG,AFAF,AD2BL,AJnBI,ACCF,AFNO,AUyGL,AqBrHEtB,ADJJ,AVT0B,AJqBlB,AHrBZ,CFkCA,ASlCgB,CfiDd,AejDF,EZsBS,EFAI,ALQP,CAAC,CgCAC,A/BCA,CJGK,AETF,A8BhBA,CzBwCD,COpBC,AJPK,AE4GL,AM7GM,CVCE,CFQN,AIRK,AH2BL,CDnBC,ANII,AETP,CMFP,AUFiB9K,CiBSL,ArBDA,ANNX,CNE8B,AgBJZ,CZSL,AMoGZ,CuBpGa,AnCII,AETZ,CgBJe,CAAT,ClBaX,AQXF,CMMA,AIRyBC,ClBaD,AQVvB,AJOmB,EGkBE,C4BnBC,A5BmBA,AHlBA,C+BDC,I/BCxB,CIRA,EAEC,CDwBQ,CAAwB,EW5BQ,CX4BhC,C4BnBM,A5BmBsB,C4BnBC,A3BPtC,AUF4CP,EX4BnC,CDnBC,ACmBZ,CDnBqC,CELE,K2BKtB,CAAjB,A7BAY,EAAkC,A2BjBfiC,CfQrB,EAAoD3B,CZSZ,CAAC,A0BrBjD,AdY8D,EcZ9B,CdYiCC,EZSrB,A2BjBxC,C3BiBmD,A2BjBf,C3BiBI,CAAlC,EAAiD,A2BjBvD,O3BiBM,CAAD,CAAP,AYT+E,CAACC,MAA1E,EAAkFF,EAAE,EAApF,EAAwF;AiBUlG,ArBDC,ADiBH,APhBK,ANIG,AUbW,AFIb,ALKD,ADFD,AUsGI,AqBrHH,ADJGqJ,AdYQ,AHtBhB,EoB+BE,CFnBE,CDFIA,EtBYW,AFIT,GNGD,A8BnBI,CGqBH,AnCII,AQTA,C2BKH,AnCII,CgCzBC,AdYIxJ,CVIH,CRSC,CYgGH,CVtGX,EMHkB,CRSE,AQTD,ANGJ,CiCEjB,AnCIuB,AYgGL,AM7GQ,EVIX,C2BKM,A3BLI,AUJII,EN6GN,CVtGrB,EiCEF,CAb2E,AvBiHrE,CuBpGiC,CnCIjC,CQTS,CAAX,MUJyC,CAACD,EAAD,CAA/B,gCcZR;AEuBN,AlCGM,AUdU,AH4BhB,AHjBE,AFFA,A8BpBI,AVNR,AJkBgBH,AHvBhB,IfoCQ,AsB/BJiF,CZiBI,CH4BF,E2BjBE,AhBVQjF,CdUP,CFFC,GFKO,AIHJ,CJGK,AOcJ,AHjBA,EcVU,CdUP,AcVQJ,CdUrB,AcVoB,CX2BL,AW3BH,CdUI,CAAC,AkB5BA,EpB0BE,CEEC,AkB5BA,CtB+BhB,AIHJ,CJG0B,AELI,CEEP,CGiBzB,AHjB0B,AFFxB,EKmB0B,AHjB1B,CJGI,CIHwB,EkB5BEwD,MAAV,EAAkB,gCUMFoG,KAAhC;AEsBC,ACDP,ArBjCoB,ARiClB,ANKI,AUfqB,AFKvB,ADwBF,AJnBA,ACEE,AFFF,AUoGE,AqBrHFtI,ADHC,AVND,AJkBS,AoBab,AvBrCA,EkBeIA,ECkBK,AlCID,AUfqB,EFKnB,AcrBF6C,AgB+BF,EHLE,CnCKK,AGLJ,CGAC,AELI,ANKJ,CUoGC,AU9HE,CtB+BG,AIHJ,AkB5BEmB,CtB+BN,AIHK,EIPM,ALKJ,ADAA,AoB1BP,Ca0BQ,A/BEA,A6BnBE,AXTA9B,CV8HZ,AqBrHawI,C/BiBO,CiCAP,A7BAA,AHAf,CDAA,AoCKJ,ClCHqB,AFN6C,CII5C,AJClB,AoB3BI,CnB0Be,AmB1BnB,CdqBE,CyBZF,AXTuB,ChB0BD,AELI,C2BKH,CAAC,AhCAA,ACEZ,A6BnBc,C7BmBD,AkCGA,ClCHb,CAAV,CAD0B,CAE1B,EDHF,EAAiC,CgCAlB,CAAoB,CFjBG,EKsBb,CAAA,IHLkB,CAAC,G7BA1B,CAAuB,CgCK7C,CAAuC,CHLpB,ACFoCU,EDEE,E7BAnC,E6BAH,A7BAmC,C6BApD,G7BAoB,EAAsC,E8BFS,GACzD,E9BCU,CAAlB,E8BFiE,GAEzD,KAAM,IAAGC,OAAQ;AFCrB,ACAN,ArBAF,ARAI,ANKG,AUhBC,AFMA,AGhCR,AJwDI,AJnBE,ACGA,AQiGE,AqBrHA,AXTA,AJkBC,AoBaP,AvBtCF,EoBiCE,E5BmBE,CWhCI,CgBac,ACAhB,AzBXgC,CyBW/B,GDAL,A/BAQ,CGAC,A2BjBIjO,AXTAyF,Cf6CH,C+BdC,C5BhBX,APWY,AePE,CiBOd,A5BmBa,AKiFA,CuBpGC,Ab1BI,CAACoB,Ef6CF,AJnBA,CGAC,AMoGA,AU9HL,ChB0BM,AgB1BI/B,EgB+BvB,CHLA,CvBoGuB,CNpGrB,AELgB,A8BUG,ChB/BR,CnB0BT,AmB1BE,CV8HO,CTpGe,ESoGE,GJzGxB,CIyGO,CJzGgB,ADwBhB,CAAa,CKiFW,KLjFxB,A0BpCP,CrBqHqC,CJzGL,ADwBJ,AKiFU,CJzGL,IIyGI,CLjFH,AKiFlC,CLjFmC,ICxBnC,cDwB4B,EAArB,CAAX,CAF0B,CAG1B;A2BnBF,ACAA,A7BAC,ANKE,AUhBH,AFMM,ALKA,ACGF,AFHF,A+BjBC,ADJD,AVLC,AJmBO,AoBYR,CtCPG,CmCEL,CFnBE,CzBcI,EwBhBA,EEqBA,AxBXA,APWA,CKLK,CAAC,ANKJ,CgBPO,AoBYN,CnCLC,CKLJ,ALKK,COXC,AFMI,CUFG9C,CiBOL,AjCAA,CiCAC,AzBVX,AQGiB,EfOf,ADAW,CiCAjB,AjBPwB,CiBOL,AjBPJ,EVET,AUFqBC,EiBO3B,AzBVY,AFKe,CELd,CyBUY,AjCAA,CAAC,CMLK,GAAG,IAAI,MELlC,CAA0B,CRUb,CACX,GgBR8C,ERHhD,CFK8B,AUFqBT,CRHhB,AFKO,ANMjC,CAAC,KMNgC,CAAA,AwBhB5C,C9BqBe,C8BrBe,C9BuB1B,GMPwC,CAAA,EEL1C,EAAqD,IAArD,AQGM,ERHqD,AQGiBQ,EAAE,GRH9E,AQGiFC,CRJrF,wBQI8G,CAACF,MAArG,EAA6GC,EAAE,EAA/G,EAAmH;AgBOtH,ACAmB,A7BC1B,AIVA,ALCI,AGIyB,ADwB3B,AJnBG,ACGD,AFFM,AUkGN,AoBxHE,AdcQ,AoBYV,AvBvCN,ImBiCS,ACAmB,A5BoBxB,EG7BE,ALCO,AGIkB,A8BUzB,GHNqB,EvBoGhB,CM1GSN,CoBYP,E5BfE,A4BeA,E/BcE,AKgFX,CF7GY,AH6BA,EW1BU,CVEkB,EAAf,AUFAO,CbFzB,CAAyB,EE4B3B,CAAwB,GAAxB,CAA4B,GAA5B,EAAiC,QAAjC,GG7B4C,AQGQ,CRHP,AQGQD,EAAD,CAAxC,ERHgC,CAA9C;AwBSM,ACA2B,AzBRjC,ALOA,AGJ8C,AD0B7C,AJnBE,ACGC,AFLa,AUqGb,AqBrHF,ADHC,AVND,AJoBYN,AoBWC,EjCPf,CEJoD,C4BKnB,A5BuBjC,CC5B8C,C0BK9B,AxBRZ,ARWE,AoB5BA,CdsB0B,CUFlBA,AoBWC,CLtBNkB,CvBQD,ARQS,CUqGR,CVjGH,AoCEa,C5BdR,ALOX,CAAY,AGJkC,A8BWzB,CJNI,A1BLS,C0BKR,A1BLpB,AI0GF,AM1GkB,ChBKL,AgBLMtB,CRHP,ARQd,AgBLoB,CRHL,ARE+C,AgBClD,ChBUZ,CGNF,E6BCA,A7BD8B,A4Bf5B,CCOuE,CAWzE,E7BHA,CKPgB,CAAhB,ALO4C,AiBxB7BwD,MAAT,CjBwBN,AiBxBE,EjBwBwE,AiBxBlD,cc2B0BkJ,cAAc,GACtD,KADsD,GAEtD,KAAM,IAAGC,OAAQ;ADJF,AtBkBpB,AHzBL,ALIA,AGEM,ALIL,ACGG,AFAF,AUgGI,AqBrHP,AXTOxI,AJoBK,AoBUE,AvBvCf,CkBjBsB,EEkDpB,AFlDF,CzBiDQ,AcvBAA,ET0CK,AHzBP,C4BYK,C9BNC,CHFV,AGEW,AcvBA,CAAC9C,GAAN,CjBqBN,AiBrBgBmC,CZiBH,AE6GA,EPzGL,CKJQ,CGyBQ,AHzBP,AFMX,AIuGW,CF7GjB,AFMsB,AIuGJ,AU9HZ,CjBqBN,CQqB4B,AS1CJyB,GV8HX,CAAW,GCpFG,ALnBrB,EIuGO,AU9HP,CV8HA,CCnFH,iBAAD,IACK,OAAO,iBAAP,KAA6B,UAA9B,GACJ,mBAAmB,CAAC,OAAD,EAAU,iBAAV,CADf,GAEJ,qBAAqB,CAAC,OAAD,EAAU,iBAAV,CAJlB;AqBfL,ACFD,AzBPC,ALME,AGAG,AJOD,AFAF,AUwFA,AoBjHA,AVLI,AJoBC,AoBUH,AvBxCN,CoBiB0B,CAAnB,IDmBD,AxBTA,A4BaA,CJJC,E7BHE,A2BlBE2E,EVLI3E,GUKC,E3BkBZ,CKNa,AsBZE,CAAf,C3BkBe,C6BGC,AxBTA,AYjBZ,AgB8BY,CJJC,AxBTnB,C4BaoB,EJJf,CAAkB,C7BHrB,G6BGG,CAAL,EAA8B;AAC5B,AxBTF,ALME,AEuBF,AJnBA,ACGI,A4BzBL,AVLI,AJoBA,AoBSmB,AvBxCxB,CiBKA,CzBoDE,AJnBA,E+BDE,IxBTI,APUA,AmCEgB,CJHf,A7BHA,C6BGC,C/BCF,CmCEoB,CjCNxB,CiCM0B,C/BiBf,CFvBC,AEuBA,C2BpBZ,GAAgB,A7BHhB,QEuBF,C2BpB2B,A3BoBA,C2BpBC,CxBTC,CH6B7B,CAA+B,CG7BC,EAAhC,CwBSkB,CAAkB,C3BoBC,CAAC,E2BpBpB,CAAuB,GAAvB,CAAhB,A3BoBF,EAA+C,QAA/C;A2BnBC,AxBTD,ALME,AGDE,ADwBJ,AJnBE,ACGE,AFDF,AUgGA,A0BjGkB,AvBxCtB,EPkCM,C0BVqE,AElBzE,CFkCA,ExBXI,AFKI,CAAC,A8BIA,CpCGH,CGNC,AEuBA,EK+EE,IJvGL,AyBfS3D,C5BgBX,AGDgB,AIuGhB,CL/EF,EFvBiB,EHME,CMPf,ENOkB,CQZC,ARYrB,CGNA,EKNmC,IAArC;AG4BF,APnBE,ADFE,AGDE,AGhCN,AJwDC,AJnBG,ACGE,AFDF,AUgGD,AU9HC,AJoBA,AHhCJ,AqB0CC,CAzCM,C9BqCL,AEHI,IKsBA,ALtBI,AcvBFkE,CduBG,CNOH,AoB9BE,CjBwBD,EiBxBIC,EduBP,ANOO,CGNT,EHMY,CGNC,AHMA,CAAb,CGNA,GQqBkB,APnBA,CAAC,EOoBnB,CAAC,CS9CwB,CAACjC,EhB0BR,EAAuB,COoBzC,CS9CyB,CT8CM,AS9C/B,OT8CA,KAAwD;AACtD,APpBF,APSG,AWlBL,AFMG,ALKD,ACGE,AFDF,AoB9BA,AJoBArE,AoBQE,AvBzCN,CPqBO,CUYHA,InBeS,AuBnCLuG,EpB8BA,CQbC,AYjBE,EhB0BA,CgB1BG,GhB0BC,APSO,AWlBP,CAAC,CRaC,CHKqC,CAA7B,CGLL,CAAhB,EHMC,AmBhBoB,CnBgBnB,AWnBG,AQGiB3F,ERHxB,CXmBO,CWnBmB,EJSjB,CAAa,APUnB,CuBpCeyD,GJoBK,CnBgBG,AmBhBxB,EZMO,AgB1BG,ChB0BV,IgB1B2BA,MAAM,CAACG,OAAP,EAA3B;AY4BF,ArBmBI,APpBH,APUG,AWnBF,ALMA,AEuCG,AJlCH,ACGE,AFDF,AUoEuD,AoB/F3D,AVHI,AJoBH,AHlCD,CHgHO,AM1GP,GRyBI,AsBdA0H,EzB2DS,Ae9DL1F,EY2BA,AnCSI,CAAC,AMbJ,CHOC,EHMM,CAAC,AWnBJ,ALMA,CNaK,AMbJ,C6BIC,EnCSM,AMbJ,C6BIC,A7BJd,CiBvBiB,CjBuBD,AEuCO,CR1BV,AMbI,CNaf,AuBpCkB,Cf8DM,Ae9DLrB,CjBuBD,CiBvBA,Ef8DU,CyB3DN,CVHGkB,Cf8DD,C2BnCC,A7BJA,A2BpBC,AVHC,CY2BD,A7BJA,AEuCzB,Ae9D2BI,GY2BhB,CAAkB,E7BJZ,E6BIN,CAAhB,A7BJuC,AiBvBV,CjBuB3B,C2BpBwC,C3BoBA,CAAC,CiBvBG,CjBuB5C,EAA6C,SiBvB7C;ARyBG,ADsBD,AdVA,AWnBF,ALMG,AFKH,ACGE,AFFK,AUsGX,AoBhII,AVHA,APfJ,EhBmDM,IeZO,AZKF,AoB7BHZ,IZiBE,CLME,A2BpBCqG,CjCiCG,CAAC,AGPP,CQZI,CIOQ,CfYhB,AMbC,CNac,AWnBJ,ALMqB,AiBvBnB,CRwBO,AfYpB,AMbC,ENaiB,AuBpCFhH,EjBuBqB,CSClB,AJPF,CXmBjB,AWnBkB,GIOoB,ATDI,OiBvBZ,CZiBhC,AsBdA,AVHiCE,CZeT,CAGxB,CLKuC,A2BpBH,CACnC,AVJiB,CjBuBf,AiBvBmCiB,EAAE,CAACK,WAAH,IAAkB,EAAtC,CAAlB;AY2BF,ApBFA,ADsBI,APvD+B,AP6C/B,AMbD,AMrBL,AR0BI,ACGE,AFHc,AoB5BhB,AJmBJ,AHnCA,AqB4CO,IlBTHjF,EL2BM,AXlBU,AoB5BZkF,Ac4BK8G,CFFN,EpBFE,AfYI,CAAP,EGRoB,CgCFb,ApBFA,ADsBI,AK3BJ,CL2BK,AXlBU,EgBTX,CgBOf,CrBoBQ,GqBpBW,CpBFZ,CAAc,ADsBI,ES9CA,GY0BzB,AZ1B4B,AJmBD,CJKA,AQxBElH,CY0BD,ApBFA,CDsBpB,AuBlB4B,Cd5BR,Ec4BW,CtBJZ,ADsBU,AuBlBG,CtBJjC,AQxB6BtB,ERwBA,IDsBQ,CAAC,KS9CG,CAACG,IT8CzC,AS9C4B,CAAkBiB,CRwB/C,CAAP,AQxBwD,CT+ChD,AS/CiDO,ET+C/C,OS/C4C,IT+CjC,AS/CiD,EAAlC,CAAlC,IT+C0B,CAAC,UAArB,CADJ,EACsC;AqBpBxC,ApBFH,ADuBO,AdXH,AWnBD,ALMD,AMrBH,AR0BI,ACGE,AFJuB,A8BxBzBsF,AVHA,AJmBA,AHpCJ,AqB6CEnH,CtBNK,AfSA,CiC5BHmH,AIyBFnH,IzB1BI,AWFE8B,Ac2BkC,EFDlC,AxBTA,ARUqB,EgCDnB,CrBqBF,AK5BKpF,CRFD,CAAC,CwBSC,GrBqBN,CqBrBU,ArBqBV,EK5BJ,GAAqB,CL4BjB,CAAA,AF7CiB,CqBCG,CEuBpB,ArBqBA,AmB5CqB0K,AVHA,CY0BzB,AxBTI,ACfoB,CE8Cf,AF9CgB,CuBwBC,AZ1BE,CAAC5F,EZiBA,ACfL,CqBCxB,AVH4B,CXEW,CE6CnC,CmB5C+B,CnB6CnB,AShDoBtB,MXEZ,GqBCqBmE,ErBA7C,CWHgD,CAAChE,CZiBjD,ACdG,EDc+C,CYjBd,CXG7B,AWH+CiB,EAAE,CAACS,EXG7C,AqBAuB,EAA0B7F,KVHP,EXGjC,CqBAc,CrBDvC,AWF0E,CUGC,CVHnC,CAApC;AY2BE,ArBsBI,AH/BJ,ALOJ,AFIE,ACGE,AFLsB,A8BvBpB,AVHJ,AJmBI,AkBSNqM,EAAAA,IvBoBQ,AH/BJ,AYjBEvG,EUGIqF,AdgBA1K,EgBOF,GhBPO,CgBOH,ArBsBI,AmB7CA,CEuBH,ArBsBI,CShDD,AJmBE,CchBC,EVHA6E,CTgDH,AK7BV,AkBOkC,CJvBjB4C,CEuBf,ArBsBsC,AShDxB,CY0BD,ExBTE,AYjBE,CY0BjB,AZ1Bc,EZiBI,CYjBG5D,GY0BC,AxBT1B,CwBS2B,CAA3B,EAA8B,OZ1BS,CAACc,EAAE,CAACU,UAAJ,CAAzC,KUGiB,CAAyBqC,cAAzB,EAAyCnI,QAAzC,CAAb;AEwBA,ArBsBI,APxBL,AIPF,ACdL,ARyBI,ACGE,AFNI,A8BtBFwI,AVHJ,APlBJ,AqB8CEiE,EAAAA,EzBzBE,AqBAIjE,CtBQoB,CJaf,AINT,AYlBIzC,ETgDI,AXvB4B,KWuBvB,CAAC,AXvBd,IoBzBgB,CUGG,CAAC9F,CVHDqF,GUGf,AVHkB,CUGG6F,EVHA,CTgDjB,AShDc,CTgDO,AF7CJ,CLqBQ,C0BrB7B,AVHyB7G,CXGD,CLqBQ,GOwBA,AF7CxC,CE6CyC,APxBG,GOwBhC,EAAkC,GShDC,CAACc,EAAE,CTgDtC,AShDuCW,YhBwBX,AgBxBO,CAA3C,ChBwBG;A4BGE,ArBsBE,AVpBP,A6BzBI2E,AVHJ,AJkBI,AoBUF,AFJoC,CAAD,GJrBjCA,EVHA1E,AgB4BF,AFAA,EFFG,ChBRItF,IgBQS,CAAC,CFvBJ,CAACO,AdeZ,EgBQc,CAAb,AFvBD,AVHa,AJkBE,CcfCkH,AMyBJ,EJFW,AZ1BP7C,AgB4BF,CpBVd,EIlBmB,CY0BlB,EZ1BqB,CAAH,GAAOhB,EUG1B,EAAgC6G,MAAhC,IVHwC,CAAC/F,EAAE,CAACY,aAAJ,CAA5C;AY2BG,ApBJP,AfYO,AY/BP,ARyBI,ACEE,AFNF,A8BrBC,AVHD,AgB2BoB,AvB9CxB,AqB+CE,GJ7BE,CrBIA,EGmBE,AfYO,AuBlCLC,Ae0BFgI,CHHA,CIIkB,CFCf9B,EzBzBE,ATqBA,CEMC,AkCHgB,CJDf,CICiB,GvCON,AY/BP,AWHE,CXGD,EZ+BU,AGVR,AoBxBE7G,CvBkCK,CsCRJ,CvBJA,AVQA,AFNA,AoBxBE,EvBkCmC,AqCN9C,CtBNa,AHnBvB,AP2BsB,AkB9BE,ClB8BD,AkB9BF,ClB8BG,CFNxB,CoBxB4BhB,CRsBN,AHnBK,ATqBA,IYFuB,IVQ5B,CAAc,EO3BxC,EAA4C,AWHE,CAACc,ClB8BrB,CAApB,AkB9B2C,ClBWjB,AkBXkBa,ClB+B5C,UkB/BwC,CAA1C;AY2BI,ApBJN,ADqBkB,AdTlB,AWlBE,ACbF,ARyBE,ACGE,AFPA,AUwGC,AUhIH,AJiBI,AoBSc,E3BvBpB,GEuCM,CCpBF,ADoBE,ADsFK,AUhILC,CgBgBG,CJUH,AxBVA,CXkBC,AmBjBIvF,EJKF,CZEC,CgCEC,CAAC,AtBsGO,CUhIJ,CvBkCD,AGVA,CHUP,Aa8F2B,AM/G5B,CN+G6B,AUhIjB2E,CpBwBD,CgBPK,CRDH,AYhBE,CvBkCD,AWlBA,CIMC,AF0Ga,CUhIV,CZgBlB,ARQiB,AUwG4B,AUhI9B,CZgBG,ARQA,CSrBC,CuBuBnB,AtBsG4B,AUhINhB,CY0BD,CxBVrB,ACbsB,CDa1B,CIMF,AfYO,AmBjB2B,CgBS5B,AxBVyB,AEgH6C,CE1G5C,AZEf,CSrBjB,CZ+BkC,AGV9B,MoBxBsC,CAACc,EAAE,CvBkCD,AuBlCEe,CvBkCD,GAAX,CAAe,CAAf,CAAlC,OuBlC0C,CAAxC;AY2BG,ApBJH,ADyBG,AdbN,AWlBK,ALMM,AMnBX,ARyBG,ACGE,AQiGJ,AoB9HE8E,AVFA,AJgBkC,AoBUhC,AvB9CN,ChBoDO,AY/BP,CNqBY,A2BpBRA,CnBqCE,GHvBA,AYhBE7E,AgB0BF,C3BvBC,EE4CM,ECzBF,AHnBA,ENmBY,AaNsB3F,GJM7B,ATAO,CSAN,AQtBE,CXGD,AOagC,CAACG,CIhB7B0E,GAAG,CRsBrB,AHnBoB,A2BuBA,C3BvBC,CqBDG,AVFA,AgB0BF,CNxBGhE,AVFJ,AJgBoB,ERAhB,AQAS,CRAR,AYhBEgD,GXGd,CDaZ,ACb4B,AqBD9B,CtBc+B,EsBdI,EtBcjC,EAD2B,CAE3B,EYjBwC,CAACc,EUEE+C,AVFA,CAAC9B,IXGvC,KAA8C,IqBDlB,EAA0BjD,CVFnB,CAA1C,GXGG,CqBDgC,CrBC+B,CqBDGgI,OAAlC,EAA2C;AEyB7E,ApBJF,ADyBK,ARzBJ,AMnBF,ARyBE,ADLE,AUyGJ,AoB9HM,AVFJ,AJe4D,AoBWxD,AvB/CR,EJwBE,CGiBA,EILM,CIfA9E,EUEIoE,AMwBJ,CxBJC,AHnBA,AC6HA,CD7HC,AToBA,CGDC,CO0GC,CE1GC,CHnBX,AToBY,AoCGA,CjCJC,AMlBT,C2BsBU,C1BsGC,CUhIG,CpBuBD,A8BrBI,ClBoBH,AkBpBIxF,CVFDI,CVgId,A0BvGiB,CpCFpB,A8BrBM,CAAgB6C,AVFF,CRsBb,AZCY,EUyGE,AUhIE,CjBsBlB,AiBtBe,CjBsBG,CSAC,AF0GA,CUhIG7D,EjBsBtB,CAAP,CO0G+B,GE1G1B,AF0GkB,AoB9Hf,CAAJ,ClBoBgC,CkBpBK,CpB8HH,GUhIK,CAACc,CVgID,CUhIG,CAACmB,GVgIC,KD5H9C,AC4HG,CAAP,ED3HI,GyBuByD8F,Gd5BhB,CAA3C,cc4B6E,CAACK,OAAQ,wCzBxBpF,GAEA,gCAHJ;AuBwBC,ApBJC,ADyBI,AH/BF,ALMH,AMhBD,ARsBE,ACEE,AFPE,AUyGP,AoB9HW,AVFR,AJeC,AoBWG,AvBhDR,CHmJO,CDvHL,CuBPyE,CA6BzE,E9BEI,AkB9BElG,EgB0BA,E5BVE,AsBdM2E,ClBoBL,IwBII,CxBJX,AkBpBkB,AVFJ,CgB0BD,ENxBQT,AVFJpF,GlB8BC,AkB9BE,GlB8BC,AkB9BE,ClB8BD,AkB9BF,CXMG,EDUE,AYhBEhB,CXMD,AqBJM,CAACa,GtBcH,AsBdT,CrBIvB,AqBJuCgD,E5B4BJ,CMd/B,EAAkC,ANcA,CAAC,CAAf,CkB9BmB,CAAC/C,ElB8BA,AkB9BE,CAACqB,EUExB,CAAb,Y5B4Ba,AkB9BoB,CAAzC,IlB+BM,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,WAAW,GAAG,CAA/B,MAAsC,CAAC,CAD3C,CAvB0B,CAyB1B;AUTH,ADyBK,AH/BA,ACVP,ARsBG,ACIE,AFTE,AoBvBJ,AgBuBsB,AvB9C1B,GD2CS,GQpBDC,CgBYG,C5BIH,CIMC,cQtBgB,GAAGT,CZgBD,GAAG,IAAtB,GYhB+B,GAAGF,YAAtC;ARuBA,ADyBI,AH/BD,ALMK,AMfZ,ARqBI,ACIE,AFTE,A8BtBI,AVDR,AJcAvF,AoBYE,AvBlDN,EV8CY,AaRRA,IIdImG,AgB0BF,IxBJI,AkBrBMmE,CnB8CD,ARzBM,AaRR,CAACjK,CoBYD,CxBJC,ATAO,CiCIN,IxBJL,CACF,CQvBe,AJcnB,CAAoBC,EIdEgF,CJctB,GAA0B,CcbK,CAACqF,IVDA,EUCM,CAAC7C,AVDJtC,CJcCjF,MAAV,EAAkB,IId5C,KUC+B,EAA4BqC,MAA5B,CAAnB,GAAyD,CAA7D,EAAgE,iBlBuBhE,KAAK;AoBGf,ArBqBQ,AH/BL,ALMD,AFMA,ADLI,AUwGR,AoB9HgB+H,AVDZ,AJcI,AoBJG,AvBnCX,KL2B4B,A4BQxB,CzBqCM,AH9BN,AE8GE,AU/HEvE,Ae0BFqH,CHAC,CFzBS9C,AdaJnK,ELiCE,ARzBJ,EQyBM,CqBrBH,CFzBS,CAACsH,EEyBrB,A7BJe,AaRI,ELgCN,CRxBK,AaRI,CgBYH,CGAE,EnBZf,CbQiB,CiBtBG,GAAG9B,CY0B7B,EAA8B,A7BJ5B,AOyG4B,CoB9HhB,CAA0BvG,CpB8Hc,GoB9HxC,CAA+B,AVDN,GAAGmG,CUCO0B,IlBoBzC,CAAN,KQrBA,0BUC2C,CAAsB1E,MAAtB,EAA8BgI,OAAO,IAAIA,OAAO,CAACC,GAAjD,CAA/B;AE0BZ,ApBFD,ADuBO,ARzBN,AFMA,ACGE,AFRE,AUwGN,AoB9HcT,AVDZ,AJcIpL,AoBYL,AvBpDH,EHyJE,EMjHMA,ELiCE,AS/CFqH,EY0BA,AhCHA,A8BtBQ+D,CnB8CH,CRzBH,CQyBK,ARzBJ,AOyGA,CsBrGC,A9BKA,C8BLC,AtBqGA,CPzGC,AHCA,CAAC,EWwBM,AD+EmC,ECjFzC,AmB5CY,CEyBnB,AFzBoB,CEyBP,A7BJA,A2BrBM,C3BqBL,A2BrBN,AdaU,CAAC3J,CgBYnB,AZ1BkB,ElB+BA,AFRlB,AgBTA,CIdqBiF,AJcE,CbQjB,CDSe,AFRA,CgCGC,CAAC,A7BJA,AaRvB,CgBYJ,A7BJA,CaRiC,CgBYH,AhCHA,CAAC,CoBvBG,EpBuBT,CoBvBYI,CpBuBjC,EgBTsCpF,SId1C,KJciC,GAA0B,GdiBX,CgCHWmL,GhCGlC,CAA4B,CAA5B,CAAvB,YgCH2E,CAACK,OAAQ;AFDpF,ApBFL,ADuBS,ARzBN,AFMA,ADLI,AUwGN,AU/HE,AJcQ,AHzCZ,CDwCA,CFkHE,IChFQ,ADgFJ,AU/HE5F,EjBsBA,AOyGA,EMjHQ3F,EbQJ,EOuG4C,CC9ErC,ARzBJ,EQyBM,ARzBjB,KQsBW,OK9BoB,GAAG,EIdF,GAAG,AJc3B,CId4ByE,qBAAD,GAAyB,CAAzB,GAA6BxC,MAAM,CAACM,YAAP,GAAsBmD,kBAAtB,GAA2CzD,MAAM,CAAC2D,YAAlH;AY2BG,ApBDP,ADsBU,AHhCN,APaA,ACEE,AFPC,AUwGL,AoB/Hc/F,AVAZ,AgB0BF,AvBtDF,EH2JE,IsBrGK,ArBqBG,AS/CFgG,EZeA,ENeE,C8BJU,AtBqGT,CsBrGU,CtBqGR,A0BrGA,GJAO,ArBqBA,CqBrBb,CrBqBe,CyBrBpB,CJA2B,ArBiBd,EyBjBI,ElCIK,GMfG,EwBWW,A9BIT,AQ8F2B,AoB5H9BpG,CE0Ba,ExBXP,AYfE,ClB8B5B,C8BJgC,CAA/B,A9BI4B,AkB9BE,CZejC,AYfkC8E,CUAtB,CtBesB,iBYfD,GAAuB,CAAvB,GAA2BtC,MAAM,CAACK,WAAP,GAAqBmD,oBAArB,GAA4CxD,MAAM,CAAC6D,WAA/G;AY2BC,AxBXC,ALOF,AFMA,ACEI,AQiGN,AoB/HW,AVAT,AJaQ,AoBaR,AvBvDJ,EH4JE,GsBxGE,CxBRE,AYfEC,Ae0BF0G,GhCJG,AOyGA,CMlHO,CgBaL,AtBqGA,A0BrGA,EjCJE,CAAC,EOqG0C,CF5GvC,ALOA,AgCIC,ChCJd,CiCIO,CjCJS,AiBtBE,AgB0BX,CjCJU,EiBtBIrI,CjBsBD,CAApB,EAAuB,CAAC,CiCIjB,CjCJP,CiCIA,CjCJ4B,IiBtBM,GAAGmB,iBAAiB,GAAGE,oBAAvB,GAA8C,CAAhF;AY2BE,ArBoBI,AH/BL,ALOC,AMjBN,ARuBI,ACEI,AFRF,AUyGJ,AoB/HO,AVAL,AJaYzF,AoBab,E1BqGD,IsBrGI,A7BJA,AMjBA,ATiBA,AoBtBEgG,EJaQhG,EbSN,C6BIC,AhCJA,CgCIC,AtBqGA,EPzGE,AOyGA,OPzGO,AiBtBE,CjBsBD,C6BIhB,A7BJe,C6BIG,A7BJlB,AiBtBoBoE,EXKA,COQS,CgBa7B,CvBrBwB,CuBqBA,AhBbQ,OIbC,CXKV,CuBqBU,CAAC,AZ1BEoB,EXMrC,EuBoBkC,CAAjC,GvBpBF,IAA2B,GWN0B,GAAGE,YJa5C,MIbuB,GAA0C,CAA7E;AY2BC,ArBoBK,ARxBJ,AMhBA,ARsBF,ACEI,AQ2FgD,AoBzHnD,AVAD,AJaS,AHlEb,CH8KA,EoBlII,GVSIO,CJWI,CPLA,INgBA,IAAI,AMhBI,AOQA,EIdA,CjBsBD,AMhBI,EWNA9B,GjBsBC,AiBtBE,GAAGA,EjBsBV,CAAW,AiBtBE,CjBsBb,AiBtBc5C,CjBsB3B,IiBtBoB,EXMgB,CAAC,AWNF4B,MXMQ,CAAC,IAAR,EAAc,CWND,CAACc,EAAE,CAAC1C,IXMjB,CAApC,AWNiD,CAAd,Ac4BsB2J,Gd5BKnF,cAA3B,Cc4BwC,CAACyF,Cd5BG3F,Kc4BI,qBd5BrF;AY2BD,ArBoBO,AHhCN,APcA,ACEI,AFRF,AU0GN,AUhII,AJcY,AoBYd,EAAA,I1BsGI,AUhIEK,IpBsBE,CQRC,CQASlG,CoBYlB,CpCJY,CQRC,ARQA,CoCIb,GhB1BmB,CZcD,EEkHE,AUhIEmE,CpBsBd,EU0Ge,AUhIE,GpBsBC,AoBtBEA,CZcnB,EYdsB,AJcjB,CNkHgB,AUhIE3C,CZcD,AEkHA,AMlHQ,IRAJ,CAAC,AYdX,EVgIF,CAAgB,AUhIE2B,EZcV,EEkHR,CAAzB,EFlHgD,OYdS,CAACc,CZctD,CYdwD,CZcD,AYdEzC,MAAJ,CAAd,GAA4BwE,eAA5B,GAA8CL,4BAArF;AT+CM,AHhCJ,ALOA,AMhBA,ARuBF,ACEI,AFTsB,AU4G9B,AoBlIImE,AVCA,AJcgBjK,AoBYhB,EN3BAiK,IrBMM,AC4HJ,AUjIE3D,IjBqBE,AaPUtG,IbON,KAAK,AMhBI,AOSM,CIdP,AJcQF,EPTJ,CC4HH,AUjIEsG,AJcL,CAAc,ENmHR,AoBlIE,AdeR,CNmHpB,AoBlI6BkE,C3BsBvB,EAAwB,KiBrBO,CUDjC,EVCoC5E,CUDC,UAAUyB,KrBMV,CWLhB,EXKC,CAAmB,AWLenB,KUDnB,EAA0B5D,CrBMzC,CAApB,IqBNmC,EAAkC,WVClD,GAAgEwD,oBAArF;AY0BF,ArBqBQ,AHhCJ,ALOE,AFOJ,ACEI,AFVF,AU6GN,AoBlIQ,AVCJ,AJca,AoBYb,EJDF,ItBwGI,AUjIEW,ElB8BA,AFV+C,A8BrB3CmD,CdaI,GdkBJ,ECTE,C6BIC,A7BJA,AaNM,CgBUL,A9BKA,CAAC,CCTC,C6BIhB,AF1BqB,AdgBE3J,CgBUL,AF1BImE,C5B+BH,AkB9BE,CjBqBD,CAAC,A2BtBX,CE0BV,AF1B0BiD,AVCFd,CJeL,CgBUK,ChBVO,CbMzB,AO4GoB,GAAG,IsBxG7B,CtBwGkC,CRnGC,AQmGrC,AUjIuC,CUD3B,CAAJ,C5B+BgC,AkB9BEV,CUDG,Y5B+BR,EkB9BX,ClB8B8B,EkB9BIG,kBlB8B3C,CAAT,SkB9BkB,GAAiED,kBAAvF;AY0BH,ArBqBS,AHhCJ,ACVA,ARwBF,ACEG,AFVC,AU6GR,AoBlIY,AVCR,AJegB7F,CgB7BI,CAAjB,IxB4BD,ACVI,AC6HJ,AUjIEwG,ClBuBF,GMTI,AsBfM2D,AdgBInK,CRDT,AYdE,ElB8BA,CFVA,AoBpBGvC,EZcV,AsBfgB,E9BqBO,CQNV,ACVI,ATgBO,A8BrBLiM,AdgBI,CIfP,AJeQ5J,CIfPkC,EJeH,CPXQ,AOWMjC,GIflB,CAAc,EUDM,AdgBI,CchBHoE,C9BqBxB,CShBP,AOWqC,ChBKnC,A8BrBiB,AdgBL,CPXmB,AqBLEgD,C9BqBM,EQNT,AEmHA,GAAG,EFnHE,GEmHG,CFnH3B,AEmHnB,EoBlIyB,CtBeyB,AsBftC,CtBeuC,CAAhC,GAAoC,IAAI,CAAC,G0BcGkE,E1BdR,GAAa,WAA9D,CAHqD,CAIrD,A0Ba2E,CAACM,MAAO;AtBJlF,ADuBG,AR1BF,AMhBA,ARwBJ,ACEI,AFVE,AU6GV,AoBlIY,AVCJ7H,AJeS,IPXT,AWJAA,ERuBK,AF0GP,GE1GU,AIVK,CcdLyG,ElByBZ,ATJQ,CSIP,EkBzBgB,AdiBA,EPZA,AWJA,CpBoBL,A8BrBQT,CVCDrG,CRwBnB,AHpBoB,EGoBY,CTJb,AiBpBI,CjBoBH,AiBpBI6C,CRwBW,ATJhB,CAAX,EHAc,EGAI,CSI1B,ATJ2B,AHAD,IAAgB,CYIyB,AZJxB,CU6GV,AoBlIM,CAAC6D,AVCjB,EViIa,AUjII5D,CjBoBH,CAAC,CAAD,CAAjC,A2BrB0C,CpBkIL,AoBlIMe,C3BqBL,AHApC,AU6GV,SUjI2B,EAAkC1D,MUDlB,EAA4BxB,GVC5C,CADG,EUAa,CAA/B;AlB0BN,ADsBI,AHhCJ,ALMI,AMhBA,ARwBN,ACEI,AFVE,AU6GV,AUjIQ2B,AJgBY/D,IIhBZ+D,EZcF,ACVI,AC6HJ,AyBvGA+I,EvBFM,ETJF,AaJU9M,IbIN,AgCMC,CvBFI,AJVJ,GIUO,AJVJ,ALMA,AMhBI,ATgBN,AoBpBM,CJgBO,CPZL,AWJAyD,AJgBMrD,IJQF,AHpBA,AWJA,CRwBC,ATJJ,AO6GA,AUjIIgG,AJgBT,CbIF,EO6GU,GEzGN,ATJS,AMhBP,CGqBd,CAAC,AHtBa,AC8HS,CAAjC,EExGU,CQzBkB,CRyBZ,CAAN,ATLQ,AiBpByBC,ERyBxB,CTLuB,CAAxB,CSKR,ETLoC,EKNE,CIWrB,AJXsB,GIWnB,ATLsB,AiBpBxB,CjBoByB,CKNL,ALMI,AiBpBMzC,CRyBzB,ATLvB,CKN8C,SAAR,AYdpB,CZctB,AYhBwB,MR2BoB,CAAC,CAAD,CAAvB,GAA6B,OAAO,CAAC,GAAG,GAAG,CAAP,CADzC,EAEZ,OAAO,CAAC,CAAD,CAFK,CAAhB;AAGA,ADoBI,AHhCJ,ALMG,AMhBC,ARwBN,ACEI,AFXS,AUkHjB,AoBvIY,AVEJI,AJgBS,IIhBTA,EZcF,ACVI,GGsBG,ATRL,CKJE,AsBhBMuG,GlB4BC,AJZJ,CRKI,CGCF,AMhBI,AqBNE,AVEF,EXIE,AWJA,CZcH,CAAC,AsBhBM,CAAb,CrBMa,AWJAhJ,CR0BZ,AkB5Be,ClB4BD,CHtBN,IDUH,CAAZ,CIYO,EAAuB,iBAAvB,CAAP,GQ1Be,CAAoB0D,WAApB,EAAiCH,UAAjC,EAA6CsB,YAA7C,EAA2DC,aAA3D;AR2BhB,ADoBK,AHhCL,ALMK,AMnBc,AR2BpB,ACEI,AFZQ,A8BpBA8D,AVFc,AJoBjB,AoBST,CxBLG,EQxBS,CAAZ,CXKI,CE6CE,EThBF,A4BhCQA,CM2BP,GlCKG,E4BhCU,C3BsBP,A2BtBQ7C,C5BgCP,AFZW,CW4BN,AThBJ,CAAC,ESgBG,CR1BA,CAAX,EDUM,CAAS,CCVC,ADUV,AFZN,CGEA,AHJqC,AoCS3C,ClCKwB,AFXlB,CGCmB,CiCKC,GN3Bd,CAA0BgC,MAA1B,CAAiCiB,C5BgCP,CAAC,G4BhC3B,E5BgCA,A4BhCwC,CAAxC,G5BgCoC,QgCFQc,MhCEM,CAAC,CAAD,CAAlD,GACJ,MgCHkE,CAACM,MAAO,ChCG5D,CAAC,CAAD,CADV,AgCFyE7I,GhCGzD,CgCH8D,IAAG2I,WAAY,chCE7F,GACuC,cAAc,CAAC,CAAD,CADrD,GAEJ,gBAFJ;ASiBI,AHhCT,ALMS,AFQR,ACIG,AFbG,A8BrBM7B,AVEZ7G,AJgBK,AoBSH,EhBzBFA,GJAI,CoByBF,ChBzBG,CUFO6G,AVEN3J,GAAN,CT8CY,AR1BJ,AiBpBEmC,AgByBF,EAAE,EjCLE,EiBpBZ,CT8CmB,AmBhDI,AM0BG,CjCJV,A2BtBQ,AVENoE,CUFO,CAAF,CAAX,EVEZ,CT8C0B,CAAC,AR1BJ,CAAP,KAAa,KQ0BjB,GR1BI,EQ0B2B,CR1BH,CAAxB,GAA4B,KQ0BpC,CR1B0C,CQ0BK,AR1BJ,CAAD,CAA1C;AQ2BE,AR1BH,AMjBH,ARyBJ,ACIC,AFbK,A8BrBG,AVET,AJgBI9H,AoBSF,IpBTEA,EoBSF,GhBzBK8H,IgByBE,ChBzBT,CT8Ce,AyBrBJ,OzBqBW,CAAC,GAAb,IAA8B,EK9BR,IPbb,CE2C4B,CAAC,CF3C5C,CAAmB,QAAnB,CE2CoC,CAAoB,AF3C3B,IE2CO,CAAyB,IAAzB,CAA9B,GF3CN;AE4CK,AHjCX,ALOO,AMjBF,ARyBH,ADTM,A8BrBD,AVER,AJgBI,AoBMyB,ChB/D9B,CZsDE,CQjBE,EoB0BA,oB5BTqB,CAAC,OAAxB,CAAiC,CAAD,IAAO,CAAC,CAAC,UAAF,CAAc,WAAd,CAA0B,CAA1B,CAAvC;AGkCS,AHjCV,ALOM,AFQH,ACGA,AFZM,A8BrBL,AM2BD,GNpCA,C5B0CA,EiCLEyG,CxBES,CTGP,CkCNC,EAAL,ClCMQ,EkCNE,GlCMG,EkCNE,GDCI,EjCKX,CAAa,CAAb,CAAR,IkCNU,GAAoB,IAA9B;AjCJC,AMjBC,ARyBF,ACGA,AchBAzN,AoBUA,AvB7DJ,EGmDIA,IPZM,G2BsBD,ElCME,AchBE,AoBUT,CpBVUK,EPZI,A2BsBJ,ClCMV,EO5BiB,E2BsBF,EpBVf,CAAoBD,QPZU,AOY9B,AoBUU,C3BtBqB,EOYA,AoBUF,IAA7B,M3BtBiB,CAA2B,COYD,EPZ1B,CAA+B,MAAM,CAAC,OAAtC,CAAf;AE2CI,AHhCV,APgBI,ACED,AFbO,AUkHV,AoBvIIqK,AdkBI,AoBUJ,AvB7DJ,EiBiCIA,EM4BA,EzBoBM,AHhCJ,AEuHA,GMrHO5J,CfcH,GedF,AoBUK,CzBoBK,CAAC,ADuFJ,CFvHC,ARKF,ECWI,ASuGA,CFvHE,CGgCF,CVhBG,ADXF,CW2B6B,CHhC7B,CRKG,CAAZ,C8BrBkB,CtBgBM,AsBhBLS,EpBuI7B,QoBvII,GAAsC,C7BiClC,KAAK,I6BjCuCqG,I7BiC5C,CAAc,OAAd,CAAsB,C6BjCY,EAA0B,I7BiC5D,CAA8B,SAA9B,CAAwC,IAAxC,CADa,GAEb,QAAQ,CAAC,UAAT,CAAoB,KAAK,QAAL,CAAc,OAAd,CAAsB,OAA1C,EAAmD,IAAnD,CAFJ;AUiBQ,AHhCV,ALOE,AMlBE,AR8BF,ASqGJ,AoBxIQ,AVAR,AJkBQ,AoBUL,AvB7DH,IVwDI,AiBvBAV,EZgBE,ACXI,EE2CE,ARzBJ,A2BvBIiD,CdkBC5J,CfiBH,COnBC,CLOC,AaLJ,CL8BS,AK9BAhC,CL8BC,AHhCH,ACXG,CR8BH,GOnBI,APmBO,COnBN,ALOD,AMlBI,AqBLA,C3BuBH,AFYhB,A6BnCoBoG,AVAJ,CjBuBD,CAAf,C2BvBQ,AVAW,CUAKiD,CdkBpB,ERFO,CGgCH,AF3CN,CE2C2B,CF3CC,EDWD,CYhBA/E,GTgDO,CAAC,CmBhD7B,CAAJ,AVAe,CTgDX,CmBhDiC,AVAJsE,CTgDK,OAAlC,GShDW,EAA+B,Sc+BS2E,kBAAkB,CAACK,OAAQ;AvBkB/E,AHjCyB,ALQhC,AMlBI,AR8BJ,ACDF,AFdQ,A8BpBE,AVAR,AJkBC,AHnDL,CAAC,CXmEC,CcnBE,GIfIpM,CPjCD,COiCG,APjCF,EZoEE,A6BnCM6K,C3BuBL,AMlBI,AWLFlG,IjBuBT,AFYW,C6BnCO,C9BoBP,CCeG,CQ9BV,AqBLiByF,C5BkCL,CFdD,CAAC,CCeG,ACDH,EFdG,CAAb,EAAgB,AoBpBI,APjCvB,CbqDoB,AoBpBItH,APjC9B,CiBiCmC,C7BmClB,A6BnCmB+B,C7BmCL,ADfF,E8BpBL,AjBjCS,CiBiCOgD,AVAX,CAA1B,CnBmCA,CA5CI,AD6BE,CCgBN,CDhBkC,AarDE,CbqDD,AarDE,EbqD/B,EAAiC,I8BpBlB,CAAb,WjBjC4B,CAAN,GAA+B,EAAhE,CAAD,EACK,IADL,CACU,OADV;ALgDc,ALSX,AMlBI,AP6BH,AFdQ,A8BpBAK,AVDR,AgB6BF,AvBzDF,EuByDE,E5BduE,CAA3D,CsBdFA,AVD4B1D,Ae8BlCmJ,E3BfuE,CAA3E,CNoBQ,QAAQ,AFdF,CoBrBqC,AgB6BlC,ElCME,A4BlCM,CAAC3D,AVD4BhK,AgB6BrC,ADCI,Ef9BmC,CAACwE,CpBqBnC,CAAC,C8BpBb,C5BkCiB,A4BlCM0D,C5BkCL,OFdK,CAAC,AoBrBhC,CpBqB+B,CAAV,CAAc,EEclB,CAAuB,A4BlCM,C9BoB1B,A8BpB2BgD,E9BoBN,K8BpBV,CAAwBL,C5BkCtC,CAAjB,I4BlC+B,CAAvB,EAAwD,CAAxD,I9BoBY,CAAZ,EAAwD;AWMrD,AHXb,APqBE,ACDA,AFdU,A8BpBFT,AVFR,AJmBAlK,AoBWA,EpBXAA,EdiBA,CSTI,CmBzBIkK,AVF8D3F,EZgBlE,EPqBE,AmCPA,CpBXG,CdiBD,AcjBElE,CdiBD,CMpBC,EPqBE,ADfF,CQNG,AsBdM,CAACwB,C7BmCL,CmBrCqE,CpBsBrE,AgBHf,CdiBA,AcjBoBf,CInBmEhB,CUE/E,CtBca,ANoBA,A4BlCM6H,AVF8D,CZgBnE,AYhBoEpD,CnBqCnE,AmCPvB,CnCOwB,CelBxB,CdiB0B,EcjBI,KdiBT,EAArB,A4BlCQ,CVFR,EZgBa,CAA0B,CPqBxB,AelB2B,CfmBtC,EOtBS,EAAgC,IPqB9B,EAEX,UOvBS,EAAkD,IAAlD,EAAwD,KAAxD,CAAf;AGkCK,ARxBL,AMlBI,AR+BM,ACFR,AFdS,A8BpBD6F,AdiBJ,AoBWJ,CDzEG,ChCoEL,EiCKE,EN5BQA,AM4BN,CAAC,CjCLC,AMlBI,AOYAnK,GbMJ,AMlBO,AP6BJ,EcjBM,CPZC,A2BuBd,CAAW,CpBXK,CcjBG,CAAC,C5BkCpB,A4BlCqB0K,AM4BrB,C3BvBoB,AOYhB,CPZiB,IqBLM,CAAC7C,ErBKd,CAAe,IAAf,CAAoB,UqBLb,CAA0BjI,KrBKjC,CAAZ,AqBLiB,CAAX;AnBgDP,AHlCH,ALUE,AMlBE,AR4Ba,ACChB,AFdQ,A8BpBF,AVHL,AgB+BA,CzBtBJ,CFDM,IR+BE,EEbA,CKVC,AYhBEqH,AgB+BF,C3BvBK,AR4BK,EAIX,CEdK,AMlBI,EDQF,CAAC,CPoBG,CEVf,AFUA,EEVgB,AiB1BE,IZgBb,CYhBkBpF,AgB+BvB,C5BfF,ACR4B,CAAC,CDQH,QCRX,CAAwB,GAAxB,CAA4B,GAA5B,CAAX,kByB0ByD+J,adlCX1E,KckC6B,CAAC+E,IdlCvE,GAAsD5H,AckCyB,adlC/E,GAAsEC,cAA7E;AZiBA,ALUE,AFcF,ASkGE,AoBvID,AVHJ,AJmBO,AoBYL,ChBlCH,EUDI,CtBoBA,EE0HkB,ETlGd,AerBIxD,CRHH,CQGK,CbOH,EaPM,GbOX,CFcW,EEdE,CFcC,CAAhB,ASkGE,GPhHA,CaPuB,KNuHiB,WAAxC,CAAmD;ACvFzD,AHlCG,ALUG,AMnBA,ARiCF,ACjFuB,AF+DjB,AUwVR,AM5V6B,EN4V7B,IC5TI,AF3CI,ERiCF,GEdG,EOoVT,AM5VoCd,CPXpB,ECuWhB,CTtUe,CEdX,AaRqC,CbQxB,AMnBI,ATeN,AgBJ2Be,CLgCxB,AVVA,CAAhB,EUWA,CAAC,AX7BiB,GgBJgB,CPXhC,CTeqB,CSfO,ATexB,CW6BN,ARzBE,AaRkDf,CbQxB,AHJF,CW6BK,GKjC0B,CbQxB,AaRyBe,CLiC1D,EAA8C,CRzB5C,EAAqC,CQyBvC,CKjCoD,CAAeF,EbQvB,CQyBuB,IKjCf,CAAuBG,GbQpC,EAArC,GaRiF,CAACC,IAAhC,EAAsC1C,cAAtC,CAAzB;ALkCxB,ARzBF,AMnBG,ARiCJ,ACHJ,AFfY,AUwVR,AoB5WA,Ade4G,AoBc9G,AvB1DF,EF8EO,AyBpBL,GpBdM,ELkCI,CAAC,AVXL,C6BtCGiM,AjB7BF,CJkCK,ERiCV,KQjCiB,CIlCrB,CF8EO,AE7EH,CF8EO,AF7Ca,E2BwBF,GAAA,AvB1DtB,CJkC8B,CAAC,AIjCH,MiB4BxB,AjB5BwB,CF6ErB,CACmB,CE9EwB,EADlD,CF8EO,CE7E6C,CF8EpB,IF7CR,EAAhB,CE4CD;AAEF,AHrCH,ALWC,AFcC,ADlBQ,AUqUF,AoBzVT,AM6BG,AvBzDF,CF0EF,AmBnFgC,EAAhC,IjBSO,CZkEC,COzBC,AE4UC,C0B5TA,CvBzDC,CZkEC,AYlEA,ELyCV,CPyBa,AYlEA,CAAR,EAAW,GZkEG,ASmTX,CTnTY,ESmTgB,AGrXd,CHqXd,EGrXiB,GZkEZ,AmCTX,EnCSA,CAtDI,AYZyB,CZmE7B,AYnE8B,MAAhC,EAAwC,CAAC,GAAG,MAA5C,EAAoD,CAAC,EAArD,EAAyD;AFgF3D,AHtCC,ACTO,ATgBI,AUqUF,AM3UFxJ,AoBeJ,AvBzDA,CLkCJ,GQQQA,AoBeJ,EAAE,CAAC,C3BzBK,CCqVF,CGrXA,EG0CM,CAACC,EH1CF,CuByDX,CpBfI,AoBeS,CvBzDC,EbgDA,AgBNMH,CoBepB,CpBfsB,EAAlB,AH1CgB,CAAC,CAAD,CG0CO3C,AH1C3B,CHqXM,GAAgD,EDrVlD,ATgBuB,EShBQ,CTgBL,IUqUxB,EM3U4B+C,ChBMG,CAAC,SAAD,CAA7B,CAHkB,CAIlB,EgBPmB,CAAwB,IkBkBQ0K,clBlBhC,EAA4C9K,EAA5C,AkBkBkD,ClBlBzE,AkBkB0EoL,MAAO;A/B9D1D,AMmCrB,ARkCN,ASmTM,AM3UL,AoBeF,GpBnBC,GPNM,GCqVA,ETnTC,CQlCK,CAAC,ORkCG,CQlCV,CAAiB,CRkCJ,ASmTb,GAAmC,ETnTjB,CAAC,MAAzB,EAAiC,GQlC3B,CAAoC,CCqVpC,MDrVA,EAA6C,SAA7C;ADUV,ALWA,AMpBS,ARkCH,ADlBM,AUqUF,AGtXN,ML0CE,APyBA,EYnEE,CHsXE,CTnTA,GAAG,AYnEA,CAAC,IZmEI,CAAC,CDlBD,CajDV,CAAc,EbiDA,GAAG,AajDjB,CZmEU,AYnEd,CZmEE,CSmTI,AGtXoB,GHsX4B,GF5UtB,GAChC,CAAC,EE2UK,GF3UN,EAAwB,ERMmB,CAAC,IAAvB,CAA4B,EQNzB,GAAqB,CAAC,CAA9C,KAAmD,CRM9B,EAA4C,CAA5C,CAAb,CALkB,CAMlB;AQNN,AROM,AUqUV,AM7UEnM,AoBgBF,AvB1DI,EG0CFA,AoBgBF,IvB1DI,CL2CK,IAAI,AQDF,CRCG,AQDFK,GRCK,AK3CJ,CuB0DC,AvB1DA,GuB0DA,EpBhBZ,AH1CW,CG0CSO,CH1CD,EL2CM,EQDzB,CRC4B,CAA1B,AK3CS,CG0CiB,AH1C1B,CL2C6B,CAAC,GAAG,KAAK,CAAC,CQDD,KRCtC,EAA+C,CAAC,EAAhD,EAAoD;AAClD,ACXA,ARkCF,ADhBM,AgBRJ,AoBgBJ,AvB1DC,IJgCG,CIlCJ,GG4CQX,CoBgBH,C5BfK,APuBJ,CAAC,AYlEA,CJgCK,COUC,CRCC,CCXC,COUC,AoBgBhB,C5BfiB,ECXE,A2B0BJ,CpBhBX,ERCkB,CAAC,A4BevB,C5BfsB,CAAlB,YCXW,CAAa,MAAb,EAAqB,CRkCR,IAArB,CAAL,CQlCa,CAAX,ARkC+B,SiCLwB4L,kBAAkB,CAACM,MAAO;AzB5BjF,ARkCA,ADhBI,AoCQR,AvB1DE,IJgCE,EIhCF,KuB0DK,CvB1DC,CZkEC,AYlEA,GuB0DG,C3B1BK,A2B0BJ,AvB1DX,CJgCgB,AIhCJ,EZkEV,CAAa,EYlEf,EZkEE,CAAkB,CQlClB,CAAwB,GAAxB,CAA4B,GAA5B,ARkCA,EQlCiC,QAAjC,Q2B0B6C,KAAK,OAAO,EAAjD,CAAL,CAA0D,IAA1D,CACL,IAAI,IAAI,IAAI,CAAC,IAAL,EADH,CAAP;A5BfI,ACVD,ATkBK,AgBTJ,AoBmBL,AvB5DE,QL0CO,AQDA,KAAKjM,OAAT,EAAkB,sBRCO,IAArB,CAAJ,EAAgC;AAC9B,APuBF,AexBI,AHzCT,QZiEK,GexBSA,ERCA,CAAP,GPuBO,CexBL,GAAe,KAAf;AREH,ACXH,ARkCE,ADhBI,AUqUF,A0B1TR,E3B7BI,A2B6BJ,O1B0TQ,K0B1TI,C3B7BK,A2B6BJ,C3B7BK,ITkBF,AoCWJ,EAAM,K1B0TV,CDvVJ,CAA2B,CCuVc,EDvVzC,CAA+B,CCuVc,GAAJ,EDvVJ,ATkBN,AUqU3B,CDvVkC,ETmB5B,IAAI,CSnBd,ATmBe,ESnBgC,QAA/C,CTmBU,EkCW4C2L,GlCXvB,ekCWyC,CAACM,IlCZnE,EkCY0E;AvBkBhF,AHpCC,ALOD,AMlBA,ARkCC,ACLD,AFVM,AUqUV,AM/UU,AoBoBR,AvB7DF,MVkDW,ADWA,CDDwB,CAQ/B,CUWU,AF/CH,A2B6BJ,AvB7DA,CGyCO,CoBoBZ,GAAU,CvB7DZ,EF+EI,AF/CA,CE+CmB,CR7BnB,AiCWa,CjCXO,AHCR,AoCUE,GlCAd,ESkBA,EAAgD,KTlBf,AcpBD/N,CoBoBxB,CpCVkB,AoCUE,GpCTjB,IAAgB,CAAC,CoCSpB,GlCAR,AcpBM,AoBoBkC,ClCAO,CcpBP,EoBoB1C,IpCTa,CAA8B,mBAA9B,CADL;AW6BV,AR1BA,AMrBG,ARoCC,ACPJ,AFTW,AgBXG,AoBoBZ,AvB7DH,CJGD,CNkDE,ADQA,OAAO,AkCAA,EAAL,ClCAK,CCRP,AaZmB4C,CbYP,AHDD,AoCSC,IpCTe,CAAC,AoCSX,CAAC,CpBpBJ,EbYd,CaZ8B,CbYW,GaZPI,KoBoBtB,CpCTD,AoCSqB,CpCTY,SgBXd,AoBoBlB,CpBpBuC,EoBoBN,GpBpBWjB,CoBoBtD,GpCTS,IgBXmB,CAAhB;ALuCd,AHrCI,ALQJ,AFkBI,ACPF,AFTQ,AgBXI,AoBoBZ,AvB5DJ,SF8ES,AHrCI,ALQX,AiCWO,CzBkBC,AHrCI,CAAR,ANmBK,EcpBUW,CbSnB,GAAiB,EDWA,CFTD,AgBXF,EoBoBZ,GlCAqB,CCXvB,CQ6BO,AX3BgB,EW2ByB,CX3BtB,EEST,CSkBV,CTlByB,ISmBpB,IAAI,ATnBd,EFTsC,CAAC,EW4BpB,GX5BK,CAAqB,KW4BpC,GACP,GX7BsB,CAAhB,UW6BQ,CAAC,OAAD,EAAW,iBAAX,EAAwC,IAAxC,CADP,GAEP,gBAAgB,CAAC,OAAD,EAAW,iBAAX,CAHpB;AAID,AHxCI,ALUD,AMpBJ,AP6BG,AFTS,AgBXC,AoBoBV,C5B5BH,E0BrBE,GzBoBI,GNoBG,SAAL,CHAa,CSpBG,CNoBC,EMpBE,CAAC,AToBZ,CAAW,IAAX,CGAR,AMpBmB,AToBK,ESpBI,KAAT,CAAvB;AEoDA,AHxCA,ALSG,AMnBH,ATkB6B,AUoUnB,AwBzTT,CAxDM,QxBiXG,OVpUmB,IAAI,EAAE,QUoUzB,GVpUkB,AUqUV,SADR;ATpTJ,ACLJ,AFX8C,AUyU5C,AMnVQjC,AoBqBV,AvB9DF,EX8DE,AkCAA,IpBrBUA,AHzCN,GH4XG,GMnVS,Cf0BL,Ae1BMU,GhBU6B,EoCW9B,C1B8Td,AG5Xe,CX8DC,AcrBR,ChBUgB,AgBVD,AoBqBT,CnCKI,AYnEC,CX8DH,EDKK,GYnEH,CZmEO,CAAC,Ce1BO8B,CHxCjC,GZkEE,Ae1BqB,Ef0BU,Ae1BM,CHxCjC,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,CAAY,QAAZ,CAAd,GAAsC,SAAS,CAAC,MAAD,CADnD;AVsDE,AFcM,ACLJ,AFZmD,AU0UpD,AMpV0C,AoBsBzC,EjCTF,MFcM,AmCLA,EjCTE,ADSA,CCTC,EiCSE,EpBtBuCjD,Cba1C,AHH6C,CCiBtC,CEdQ,ADSP,EFZU,CEYP,MAAM,AkCAvB,EAAyB,CpBtB8B+C,edsBtC,CctB+B,CdsBhD,ActBwEE,IAAxB,EAA8BpB,KAAK,CAACE,QAApC,EAA8C,IAA9C,CAAP;AbczC,ADSA,AFbyD,AUiI3D,AM3IwG,AoBuBpG,AvB7DA,MAAO,CGsCD,CbcJ,EDSE,CkCAC,EjCTE,GHJgD,AahDvD,CX6DW,CCTC,EDSE,GFbgD,EAAE,AahDtC,GX6DJ,CAAC,AkCAvB,GjCTE,AiCSwB,IlCA5B,CCT2B,CAAC,WAAW,CAAC,KAAD,CAAZ,CUpDzB,CAAyC,EVoDO,KAAK,KAAK,KAAK,KAA7D,CAAJ,EAAyE;AACvE,AMpBN,ARiCQ,ACJJ,AFdwB,AgBTnB,AoBuBD,AvBlCN,AqBiCK,MzB5BD,AyB4BOiM,EECL,ElCAE,CCTC,CFaC,EmCJE,CpCdF,CGKN,AFaW,AmCJD,CnCIE,EEbC,CDSC,CkCDY,ElCCT,CCTjB,CADuE,AFcjE,CEZN,IFYyB,ACJD,CAAC,GO7BG,AyB4BO,GzB5BH,AyB4BM,CAAC,EjCKrC,CCJJ,CDIuC,IQjCN,IAAsB;ANsBrD,AMrBJ,ARiCQ,ACJN,AFdQ,AgBTP,AoBuBG,AvBlCI,AqBiCV9I,EzB5BA,AyB4BAA,ClBhCE,CdiCA,EgCFyC,EEErC,CvBlCW,CZsCT,CCJC,CAAC,EFdA,CCkBG,AmCJA,C3B7BC,ARiCA,CQjCC,A2B6BA,AvBlCL,GZsCF,AYtCiB,CZsCN,ECJjB,AFdiB,CSfnB,AP6BsB,CO7BE,ARiChB,EDlBe,ESfA,IAAS,CP6B9B,AFd4B,CAAC,MAAR,GAAiB,CAA9B;AGON,AMrBF,ARiCM,ACJN,AFdO,AoCWqB,AvB/B5B,AqBiCFuI,EAAAA,KEFI,G3B1BI,ARiCA,MAAM,CAAC,EQjCE,CyB0B0B,EzB1BvB,MRiCZ,ACJQ,GDIc,IAA4B,ACJxD,CDIyD,CCJlC,MDIjB,ICJ2B,CAAC,MO7BD,GAAf,CAAmB,AP6BrC,mBO7BwD,CAAC,IAAD,EAAO,SAAP,CAAtC,CAAlB;ADUE,APwBG,ACJL,AFdK,AgBVL7L,AoBwBC,AvBlCD,AqBiCFiM,ElBvBEjM,AkBuBFiM,O1BnBc,ENoBL,AcxBE,CAAC5L,CkBoB+B,MhCIzC,EcxBA,CAAoBQ,IAApB,GAA2B,ERIzB,CACF,QADE,CQJqC,CRKnB,IADlB,EAC8B,OAAA,GAAqB,IADnD,EACuD;AGwCvD,AHvCJ,ALUI,AMrBF,AP8BD,AcxBK,AHVJ,AqBiCFwL,EAAAA,M1BlBM,ACXA,AOMIpM,AkBmBiC,CvByB7B,CR7BN,AUzBA,CVyBC,EafM,CL4CX,CAAgB,CK5CF,CPNH,CIJb,CAAe,CGUX,EPNc,CEkDhB,AEtDF,CAAoB,CFsDc,GEtDlC,EAHuB,CJOvB,AIHA,EJG6B,MNqBV,KAAZ,CAAL,EAAyB;AQ8B7B,AHxCO,ALWD,AMrBF,ARiCE,ADlBA,AUiIN,A0BnHE,AvBhCA,AqBgCFqM,EAAAA,E1BnBO,C0BcoC,CzBxBvC,GEkDG,AyBrBA,CzBqBC,CHxCM,CPuBJ,COvBM,ALWL,AFYA,AS+GA,CVjIA,CSfE,CAAC,CRiCC,CDlBY,CAAC,CCkBV,AmCJhB,EjCRI,CAAe,AiCQA,E3B7BjB,CAAoB,ARiCA,ADlBb,CWmCJ,AVjBkB,CEZnB,CQ8BE,ER9BqB,AHNW,AUiIxC,C0BnH8B,C3B7B1B,A2B6B2B,C3B7BE,ACgJJ,CP3HvB,AFYY,EAAR,CmCJ0B,GpCd9B,CSf0B,CRiCS,ADlBW,EoCctB,C3B7Be,A2B6B3C,CnCII,EAAyC;AUmBvC,AH1CS,ALYZ,AMrBC,ARiCE,ACjB2C,AFD3C,AUiIN,AM3II,AkBwBN7L,EvBsBQ,AuBtBRA,IvBoBO,AHxCU,EQJP,CAAC,EL8CwB,CXpC3B,ESfI,AOKIP,GhBUH,CAAC,GgBVR,ChBUE,CAAW,AgBVM,IhBUjB;AWqCN,AH3Cc,ALab,AMtBU,ARkCL,ADlBA,AUiIN,AM3IQ,AoBuBR,AvBhCA,AqB0ByC,CAAD,I1BdpC,C0BsBNyL,EEFM,C1BoHC,AGpJA,CFuDC,AFpDK,COME3K,ChBUP,CoCaG,GvBhCT,CJGkB,ACiJlB,CVjIY,CShBQ,ATgBP,AgBVL,AHRJ,CFsDY,AyBvBhB,EAAkB,AFEf,CvBqBgB,AK9CM,CHRhB,IGQqBA,EhBUxB,GAAsB,GgBVH,ChBU+B,AgBVjBM,ChBUkB,AalBrD,CAAoB,MbkBlB,EgBVmB,EAAjB,eHRyC,CAAC,QAAD,EAAW,IAAX,CAA7C,IACA,KAAK,gBAAL,EADA,GAEA,KAAK,OAAL,IAAgB,EAHpB;AFwDE,AH5CuB,ALc1B,AMvBsB,ARmCf,ADlBD,AUiIL,AM3IQzC,AoBuBN,AvB7BH,ILQ0B,EG4CvB,AK9CMA,GL8CH,CD6FC,C0BpHC,CzBuBF,AFrDgB,AOOP,CAACU,ON2IC,AM3IR,CAAe,EN2IM,EAA7B,CAH2B,CAI3B,G0BrHE,CpBvB+B8B,IAAV,EAAgB;AL+CnC,AH7CA,ACTgB,ARoCd,ADlBH,AUkIH,AM7IyC,AoBwBxC,AvB5BH,KuB0BE,C5BpBkC,GR/BhC,EoCqDK,G5BtBT,CG6Ca,AH9C8C,ARUhD,AgBXuCjD,AoBwBrC,C5BrBb,GRQe,CWoCG,AyBvBA,GpCbC,CAAC,MWoCP,AK/C4CmD,CL+C5B,CXpCd,EoCaN,EAAyB,CpCbD,OWoCpB,CAA8B,IK/CO,CAA2BF,GL+ChE,CAAP,AK/C4C,EAAiCpB,KAAK,CAACE,QAAvC,EAAiD,IAAjD,CAAP;ALgDtC,AH5CL,ALcA,AMzBY,ARqCJ,ADnB2B,AgBXwE,AoByBvG,EjCPJ,KQ2BqB,AK7CX,CbkBJ,EFYE,CEZF,AiCOG,C3BhC0B,IRqCrB,CAAC,GQrCT,CADuC,CAEvC,MRoCE,GAAqB,CmCLzB,InCK8B,CAAC,GAAN,EAArB,qBiCHqD0L,kBAAkB,CAACK,OAAQ,IAAG5I,IAAK,IAAG2I,WAAY;A/BR7G,AFYM,ADpBG,AUmIT,AM7IQ,AoByBP,QpCfsD,CUmIlD,CT/GC,CEZC,AalBM/L,Gf8BH,GAAG,Ce9BL,GAAe,Ef8BJ,CAAC,CS+GpB,AM7IQ,CN6Ie,MT/GV,CS+Gb,CT/GM,AS+GyB,CAAC,CAAD,EAAI,CP3HhB,AO2HY,KP3HP,AO2HgB,KP3HjC,CAAP,EAAgC;AQ8B9B,AH5CJ,ALeI,AMzBE,ARqCC,ADpBD,AUmIF,AM7IG,AoByBN,AvB9BO,MFoDJ,AH5CA,GKRW,GVuBL,AO2HA,CF1IC,CCVC,EEsDE,AXrCF,AUmIE,EC9FE,AH5CA,CE0IC,CDpJC,ATiBF,CGQG,CQyBE,AHxCjB,CCViB,ATiBD,CGQE,AO2HA,CGlJd,CLQgB,CCVC,ATiBQ,CAAC,AafH,CVuBJ,CMzBN,EAAf,ATiBA,CQPyB,CLe3B,IKfgC,SAApC,EAA+C,AE0I9B,CAA+B,CAA/B,EAAkC,CAAlC,CAAb;AC7FA,AH5CF,ALeE,AMzBE,ARqCD,Ae9BF,AHLD,GGFA,CRUA,EG4CE,CV1C+B,CQZ7B,ARuCF,GO7BK,ALeA,CKfC,CCVC,CAAC,ENyBR,EQ6BY,AFtDV,CNyBW,AMzBA,CEsDC,GH5ChB,CAAoB,ECVE,CAAC,CDUvB,KLeE,UMzBa,CAAyB,OAAzB,CAAX,EAA8C,OAA9C,CAAuD,CAAD,IAAe;AEiDtD,AHtCnB,ALeE,AMzBI,ATgBF,AUmIF,A0BnHJ,AvB9BE,EuB8BF,GzBgBE,CRvBE,IMzBI,ACmJA,IVnIE,AUmIE,CP1HC,CAAC,AMzBA,CAAC,CTgBD,CAAC,AUmIE,CP1HJ,AMzBL,CNyBJ,AMzBe,A2BgCA,C3BhCX,E2BgCW,EpChBT,CAAa,CUmInB,EAAwB,GVnIlB,KAAwB,CAA5B,EAA+B;AWuCnC,AH5CD,ALeE,AMzBI,ATgBC,AUmIF,AM7IJ,AoB0BA,AvB9BA,SJJI,AOQGF,ELgDC,AyBtBD,E1BmHE,EC7FG,CyBtBA,EpChBA,AgBVZ,ELgDiB,IXtCC,GAAG,EWsCd,CyBtBA,CpChBkB,CWuCrB,AXvCsB,CoCgBG,G1BmHzB,CAA6B,A0BnH1B,CAA2B,E1BmH9B,CAAiC,CVnI/B,AoCgBgC,CzBuBvB,CAAC,CD4FZ,C0BnHqC,C1BmHE,CAAvC,MC5FW,EAAa,OuBrB+B6L,UvBqB5C,EAA0C,IAA1C,CADR,CuBpBsE,CAACK,CvBsB1E,MuBtBkF,IAAG5I,GvBsBxE,CAAC,AuBtB4E,IAAG2I,MvBsBhF,EAAa,GuBtB+E,cvBsB5F,CAFjB;AAGD,AFxDK,ARqCF,ADrBI,AgBVT,AoB0BK,AvB9BF,CGpDa,EL6Ff,AK7FF,OfuFU,EmCLE,EnCKE,CAAC,GDrBC,CCqBN,KAAc,CDrBD,GAAG,ECqBpB,EAA0B,ADrBF,CAAC,KAAL,CAAW,WAAX,CAAhB,EShBsB,QAAxB,EAAkC,MAAlC;AEyDP,AH/CC,ALeE,AMxBG,ARqCC,ADrBE,AUkIF,A0BnHM,AvB7BV,OJVE,CDiBE,ALeA,AO0HA,A0BnHM,EAAF,GjCPC,CKfC,AP4BA,GO3BR,CLcE,AFaU,ADrBF,AUkIE,CAAC,ET7GE,EEbE,AO0Hf,CAAgB,CFxIV,CAAC,AP2BW,CDrBD,CUkIjB,EVlIoB,KCqBP,CAAe,CEbhC,AHR+B,CAAC,CGQH,GKd3B,CAA0B,CRMJ,GAAiB,CAAnC,CAH6B,CQHjC,AROI,EQP+B,IP2BpB,CAAoC,KAAK,MO3BxD,CP2Be,CO3BsC,AP2BnD,IO3BF,EAA2D,KAA3D,CADJ;AGiDF,AH/CE,ALcI,AMxBD,ARqCG,ADpBE,AUiIH,AM7IP,AoByBkB,AvB5Bd,IGGAzL,ERKE,EP2BE,AmCPU,InCON,AmCPA,CnCOC,AehCA,ERKE,CQLC,ERKE,EQLER,QfgCZ,CAAqB,AehCb,EAAhB,EfgCkC,CAAC,cO3Ba,CAAC,AP2BzC,KO3BwC,CAA9C;AACA,ALcG,AMxBF,ACkJE,A0BrHmB,AvB3BpB,GJfF,ECyJE,CFlIE,E4BmBkB,EvB3Bd,IuB2BE,G5BnBK,GAAG,AKRA,CLQlB,EKRqB,KAAK,MAAxB;ALSF,ACVD,ARoCO,ADpBE,AgBZV,AoBwBgC,AvB1B5B,CJjBJ,GOmBIwB,ERME,E4BkB0B,EvB1BtB,GZkCG,AehCA,CoBwBD,EpBxBI,AHFA,CLQC,ARMF,AgBZf,EHFgC,CLQZ,AP0BZ,CO1Ba,AP0BA,ADpBF,Aadf,CLQF,ARMkB,GCoBZ,ADpBe,CCoBG,ADpBhB,EAAgB,CAAC,CCoBnB,EDpBsB,SAApB,EAA+B,CAAC,EAAhC,EAAoC,ekCkBiBqK,kBAAkB,CAACM,MAAO,IAAG7I,IAAK,IAAG2I,WAAY;A/BV5G,AFaG,ADpBK,AUiIR,A0BtHoC,OnCKlC,CmCLkC,CjCJ/B,EO0HE,ET7GE,CmCTD,IjCJR,AHPY,CGOG,EO0Hf,GVjIQ,CGOR;AKbF,ALcC,AMvBH,ARoCQ,ADpBI,AUiIT,AM9IH7N,AoBuBgD,AvBzB5C,MJDE,E2B0B0C,AvBzBxC,CLQC,G4BiBG,CnCUC,AYnCA,CAAC,CLQC,AQNRG,CRMS,EROA,CAAC,CShBG,ARoCZ,CAAa,AYnCb,CbeY,AafE,CJDC,CDSd,CP2BD,CO3BN,AP2BwB,CQpCC,CDSC,CP2BC,ADpBF,CShBJ,ATgBK,CAAD,CShB3B,ATgBY,AafJ,CAAJ,CZmC8B,CYnCC,CGEnC,GAA+B,IfiCF,CAAe,KejCHiB,QAAV,EAAoB,WfiCtB,CACjB,IADiB,EACA,IAAI,CAAC,IADL,EACW,IAAI,CAAC,OADhB,EACyB,KAAK,OAD9B,CAArB;AO1BJ,ACRJ,ARoCO,AS6GL,AM/IE,AoBsBkD,AvBxBhD,ILQF,EQNI,EoBsB8C,IvBxB1C,CGEGA,CoBsBH,C5BhBG,MQNP,CHFc,GAAG,CGEG,UAAxB,EAAoC,AHFF,CAAC,UAAD,CAAhC,CAD6B,CAE7B;ALQF,ALlBsB,AHwBd,AgBZJ,AoBqBsD,AvBtBxD,QuBsBwD,E5BfpD,AQNI,IAAIiC,IhBYF,CAAC,AgBZH,CRMM,AQNI,GRMD,CRMD,EAAV,EAAc,CQNG,CAAC,WAA1B,sB0ByB2DoK,kBAAkB,CAACM,MAAO,ClB/B3E,CAAN,EkB+BoF7I,IAAK,IAAG2I,WAAY;A/BVhH,AFaM,ADrBQ,AgBZT,AoBoBO,AvBrBN,MZkCA,ImCbgE,IAAhE,CnCaS,CDrBD,MAAM,GAAG,YAAY,EAArB;AWyCR,AH/CF,AP4BC,ADrBQ,AoCQP,AvBrBA,QLME,CG+CQ,EyBhCL,IpCVC,EW0CN,CAAmB,AH/CP,GROC,EQPI,C4BejB,EzBgCA,CyBhCqB,CzBgCc,EH/CrC,EAA4B;AGgD9B,AH/CI,AROQ,AgBbV,AoBqBI,AvBrBF,MLMA,AQNEvK,EoBqBA,CzBgCC,CAAC,AyBjCiB,EpBpBb,GAAGF,ERMA,GAAG,EROA,EgBbM,GLqDjB,AXxCgB,CgBbK,CLsDpB,AKtDN,CRM0B,AROF,CQPG,IAAD,CAAxB,gBRO4C,CAAC,IAAvB,CAA4B,CAA5B,CAAd;AW0CJ,AHhDJ,AP4BF,AelCA1C,AoBqBI,EzBiCE,AKtDNA,ILoDK,AH9CH,EP4BE,AmCbA,CpBrBG,CAAC2B,CLsDyB,CyBnCV,C5Bbd,AQNT,CRMU,AQNEiB,MAAZ,EAAoB,ERMlB,CAAoB,AP4BtB,EAAkB,IelCWC,MRM3B,CAAiC,IAAjC,EAAuC,CQNrB,CAAwBvC,CAAxB,EAA2B,ERM7C,S0B0BsDyM,kBAAkB,CAACM,MAAO,IAAG7I,IAAK,IAAG2I,WAAY;AvBuBzG,AHhDC,AP4BC,ADtBQ,AUmIZ,AMhJmD,AoBsB7C,AvBtBF,MZmCA,EmCbE,EzBiCE,CKvDkDzM,CHAhD,EZmCE,AmCbA,CnCaC,CmCbC,GpBtBoD,CLuDhD,AX1CF,AgBbmDJ,AHAjD,CGAgD,CAAf,AoBsB/B,CzBiCC,AyBjCA,AvBtBA,CZmCjB,CAAmB,ADtBF,GoCMI,EpCNC,GCsBtB,AYnC2B,Cbaf,AabgB,IbaE,Oabb,CbaqB,AabE,CbaD,AabE,GAAD,EbaI,AabE,CbaD,AabL,CbaI,CAAN,EAAW,CabE,mBbab,CAA9B,EAAgE;AW2CxE,AVpBA,ADtBU,AgBd0D,AoBuBlE,AvBtBA,GGDJ,GLwDE,AVpBA,EmCbE,AvBtBA,CFuDC,EEvDE,CFuDF,AEvDG,EuBsBE,CvBtBN,CuBsBQ,AvBtBA,CAAR,CbaQ,CAAC,AadwC,CZoCrC,AYlCZ,CZkCa,CDtBD,AoCSE,CpCTD,AoCSE,CpCTD,ICsBhB,AmCjBqB,CnCiBE,ADtBT,CAAQ,CAAR,EAAW,ICsBzB,CDtB8B,CAAC,KAAjB,IAA0B,KAAK,CAAC,CAAD,CAA/B,GACA,KAAK,CAAC,CAAD,CAAL,CAAS,KAAT,CAAe,CAAf,EAAkB,CAAC,oBAAoB,CAAC,MAAxC,CADA,GACkD,KAAK,CAAC,CAAD,CAD3D;AW2CR,AHjDJ,AP6BC,ADrBU,AgBfXF,AoBuBI,EpBvBJA,MoBuBI,G5BhBG,G4BWgB,CzBsCZ,KAAK,AHjDA,KAAK,CAAC,CAAf,GGiDI,AKxDiB,CLwDD,AHjDA,KAAK,CAAC,SAAD,CGiDrB,AHjDgB,CGiDiB,AHjDA,KAAjB,GGiDhB,CAAP,CHjDkD,WAAtD,EAAmE;AGkDhE,AHjDD,AEwII,AM/IN,AoBuBI,AvBtBA,OFoDe,CyB9Bf,C1BwHS,AM/INwC,GoBiBgB,GpBjBvB,AHCW,GAAP,aH8IE,GAA6B;AFvIjC,AP4BF,ADrBU,AUiIV,AM/IH,AoBuBO,AvBtBD,CGTP,MHKuB,CuB0Bf,CvBtBC,CLMC,CP4BC,EYlCE,CuBec,EpCFb,AabL,EAJc,CZsCnB,AYtCE,CAP6B,CLiBd,AKLf,CbYc,EQPI,CAAlB,AROiB,EQPI,MROI,CAAC,cAAT,CAAwB,CAAxB,CAAT;AW0CR,AHhDE,AP4BL,ADrBU,AUiIT,A0BxHI,MzBgCF,EDwFE,A0BxHA,C1BwHC,KAAK,CFxIC,CGgDC,EAAE,IAJK,EH5CC,IEwIf,CFxIoB,AEyIjB,CFzIkB,CAAtB,EAAyB,qBEyII,CAAC,kBAAD,EAAqB,IAArB,CAD5B,CAAL,EAC8D;ACxF5D,AHhDI,AEyIJ,AMjJNtD,AoBe2B,AvBbrB,MFsDA,AEtDA,CuBaA,G5BPI,CEyIC,GG/IG,CLMC,AQRRwD,AHEQ,CLMC,EGgDE,EAAE,EEtDd,CAAkB,CAAD,CLMR,CAAL,CAAiB,AEyIrB,CG/IwB,EH+IA,EFzIpB,EEyIwB,AG/IE,CGFpC,AHEqC,CLMD,CEyIN,CMjJA,CNiJxB,CAD4D,CAE5D,CGhJwB,CAAe,CAAf,CAAxB,ELMI,CQR8BF,MAAV,EAAkB,OkBmCemK,kBAAkB,CAACK,OAAQ,IAAGI,GAAI,IAAGL,WAAY;AvBgBzF,AH1Cb,APvGmB,AD6GjB,AgBdRnN,AoBwBE,AvBtBD,EGFDA,GLkDA,AE9DA,IGYO,CRQD,AQRE+C,CoBwBD,AvBtBA,GbYC,CaZG,CGFX,CAAeH,CoBwBb,C5BhBa,CRMD,CAAC,AoCUE,C5BhBC,CQRlB,EHEO,CuBsBL,CvBtBqB,MbYf,CAAoB,MAApB,EAA4B,IAA5B,MQNwC,CAAC,KAAD,EAAQ,SAAR,CAA1C;AGiDN,AHhDK,ALYH,AHNM,AUmIN,AMjJL,AoBwBK,AvBtBA,CGJN,KbsBa,AUlBP,KFsDM,AyBhCD,C1ByHC,AG/IA,CAAC,CVkBP,CQoCU,ARpCK,EUlBf,CAAY,CbYD,CW0CI,IX1CT,AoCUN,CpCViB,EUmII,CG/IrB,CFsDK,AX1CC,CAAgB,AUoIlB,ECzFF,IDyFQ,CAAC,MCzFE,CAAC,ODyFV,CAAsB,ECzFb,EAAa,ADyFtB,EAA4B,eCzFnB,CDwFb,CCxFuD,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,ARhCD,AMzBF,ATY6B,AoCWvB,AvBtBD,EVwBH,CQmBA,GF5CI,ONyBJ,AiCFW,CjCEC,EHbe,CoCWvB,GpCX2B,CGa/B,CHbiC,CGaC,IMzBT,CTYC,ESXxB,CAAC,SAAD,EAAoB,WAApB,EAAmD,QAAnD,KAA0E;AEyD7E,AHnDO,ALeN,AMpBI,ATUqC,AUqIrC,AMlJN,AoByBK,E3BtBC,G2BOK,CAAP,GjCaF,CO2HQ,IP3HR,EMpBkB,ATUuB,CGUxB,AMpBE,GAAf,CAAmB,ATUuB,EAAE,EAAE,AUqI3B,CP3HvB,IMpBI,AC+IwB,EDhJgD,CAExE,IOJgBtD,ENkJhB,EAAmC,WMlJZG,qBAA7B;ARSO,ALeG,AMnBJ,ATQsB,AUsIpB,AMlJR,AoByBG,AvBvBC,QHgJI,CP3HE,EUrBC,IbUC,EaVR,MVqBM,AO2Ha,CAAC,EP3HY,KO2H5B,CACI,CAAC,CAAD,CP5HF,CO4H2B,CAAzB,AMnJUH,KNoJN,KAAK,KMpJQwD,WNoJb,AwBhH+CiK,CxBgHxB,GAAvB,CAA2B,CAA3B,EAA8B,CAA9B,AMpJhB,CNkJQ,QwB9GyE,CAACK,OAAQ,IAAGI,GAAI,IAAGL,WAAY;AvBwBhH,ARlCI,AMrBE,ATQK,AUwIJ,AGlJJ,MFyDG,GRlCG,IHlC8B,CAsB7B,EGYN,CQkCa,ERlCE,CQmCf,CAAC,KRnCD,KQmCA,EAAiC,KAAjC,EAAgD,IAAhD,KAAqE;AACnE,AHrDA,ALkBH,AHZO,AUuIL,A0B3HH,AvBdA,EFiDI,AyBnCJ,I5BlBI,EGqDM,CAAC,MHrDE,GAAG,KGqDZ,AyBnCiB,CzBmCK,EyBnCL,GzBmCjB,EAA6B,IAA7B,EAAmC,UAAnC,CHrD0C,CAAC,KAAD,EAAQ,SAAR,CAA1C;AGsDD,AHrDA,ALmBH,AMvBI,ACiJH,A0B3HC,CzBgCJ,OFtDY,C2BsBH,aAAL,C3BtBuB,E2BsBL,C3BrBZ,CAAC,CAAC,G2BqBU,CAAA,I3BrBZ,E2BqBY,C3BrBC,A2BqBD,EAAA,EAAQ,I3BrBC,CAAC,A2BqBG,O3BrBzB,GAAgC,I2BqBpB,CAAlB,G3BrB8C,CAAC,aAAT,CAAuB,UAAvB,CADpC,CALwE,CAOxE;ADGH,AE8ID,A0B5HE,A7B3HJ,S6B2HS,OAAL,GAAe,KAAK,cAAL,CAAoB,EAAnC;AzBoCJ,AHrDC,ACHK,ATOI,AoCcN,MzBmCE,EFxDM,C2BqBH,K3BrBS,ETOJ,AoCcV,C3BrBiB,EEwDF,AyBnCA,GzBmCG,CAAC,AXjDF,CAAC,AoCclB,I3BrB4B,CAAC,IEwDX,AXjDD,CAAP,CWiDyC,IXjDlB,EAA3B,CWiDY,CXjDmB,ESPpB,CAA6B,EEyD7C,KFzDgB,CAAf,SyBgCyDJ,kBAAkB,CAACM,MAAO,IAAGG,GAAI,IAAGL,WAAY;AvB0BzG,AFzDA,ATOM,AoCcT,A7B5HH,EIgKM,IAAI,EAAE,AFzDA,MTOA,EWiDP,IXjDa,CAAC,YAAP,CAAoB,YAAY,EAAhC,EAAoC,IAApC;AWmDN,AF1DO,ATQD,EWkDN,EF1DO,OE0DE,EAAE,CXlDL,UWgDP,GXhDoB,CAAC,IAAd,CAAmB,IAAnB;AWmDN,AF3DM,ATSD,AoCcT,A7B3HF,EI+JM,AyBpCJ,GzBoCO,CF3Dc,CE2DZ,CyBpCH,GAAA,C3BvBF,CATwE,ATepE,CWqDQ,AF1DZ,CE0Da,GAHd,CX/CY;AWmDX,AXlDO,AoCcT,AvBhBQ,EFoDN,AEpDM,QuBgBF,EvBhBY,EbET,CaFS,GbEI,CAAC,GoCcL,CpCdT,EoCcY,CpCdS,IoCcJ,GpCdW,CAAC,OoCcjB,EpCdgB,CAA5B,EoCciC,QAA1C,SFW2DJ,kBAAkB,CAACM,MAAO,IAAGG,GAAI,IAAGL,WAAY;AvBqB1G,ARhCH,AMtBI,ATSK,AoCcP,AvBhBA,AN3GJ,CIyJsB,CAAtB,AR/BE,IMtBQ,IIOA,CuBgBC,CjCDC,AMtBI,CNsBH,AH1C0B,CA8B7B,GSVW,CAAf,EAAkB,AIOpB,EVeQ,EAAgB,AiCCjB,CAAA,IAAI;AjCAX,AMtBI,AIOH,QuBgBG,CjCDC,AUf8C,IuBgB1C,KjCDT,CUfC,CuBgBG,CjCDa,CUdb,CuBgBE,IvBhBG,GVciB,CAAC,IiCErB,CAAA,MjCFW,CAAsB,AUdnC,EADH,CAFiB,CAIlB,IuBeM,EADF,GAEE,aAAA,CAAA,EjCHW,CAAjB,CiCGU;AzBmCd,ARrCI,AMtBI,AISJ,AN9GJ,MIgKM,GRrCG,KiCGK,EjCHV,GAAe,OQqCO,AyBlCZ,CAAA,CjCHc,CQsCxB,ARtCyB,CQsCxB,OAAD,EAAmC,CRtCpB,CAAsB,KQsCrC,KAA4D,CyBnClD,CAA0B,iBjCHrB,CAAf;AQuCE,ARtCH,AMtBK,ATQE,AUyIR,A0BxHY,AvBhBV,MuBgBU,GzBmCR,ADqFG,GVzIC,GWoDJ,CAAA,IyBnCsB,CpCjBT,CWoDb,AyBnCwB,CzBmCxB,ADqFJ,CACI,CCtFA,AXpDiB,EWqDZ,AyBpCwB,C1BwHjC,EAEI,ICvFA,AXpDI,EWqDQ,CDsFZ,GAA+B,C0B3HG,mBFUoBJ,MxB+G1D,EAE6D,UwBjHe,CAACM,MAAO,IAAGG,GAAI,IAAGL,WAAY;AvB4BpG,ARtCN,AMvBM,ATQC,AU2IL,A0B1HU,A7B/Hd,IImKQ,EyBpCM,MzBoCE,CAAC,KAAD,EAA8B,IyBpCd,EAAE,KAAK,kBAFC;AzBuC9B,AF7DF,ATQD,AU2IH,A0B1HU,AvBjBV,MFqDM,AyBpCI,EvBjBN,CbnCK,GWwFG,CAAC,AyBpCI,CvBjBP,CbAD,AoCiBU,AvBjBR,IFqDL,AXrDO,CWsDH,AyBrCc,GpCjBP,CAAC,CWsDH,AEtDX,CFsDY,GEtDS,GbAZ,EaAiB,CFsDpB,CAAgB,CXtDK,MWsDE,CAAC,AEtDT,GFsDf,CADJ,EAC2D,MEtDb,CFqD9C,KErDoD,CAAC,UAA3D,EAAuE;AFuDlE,AF9DD,ATO6B,AU4IjC,A0B9HoC,AvBblC,AN9GN,K6B2Hc,CAIA,KvBjBH,WAAL;AJPE,ATMK,AU6IT,AG3IC,QbFyD,CU6IrD,K0B1HK,YAAY,GACV,E1ByHZ,U0BzHY,CAAA,yBAAA,CAA0B;AzB+BxB,AFxDV,ATMA,AoCoBU,AvBlBf,AN/GH,GI8JM,CAAA,EyB7BY,AFQZI,IERgB,EAAE,AFQZ,ElC5BC,GoCoBgB,AFQZ,ClC5BY,CAAC,IAAjB,EkC4BP,GlC5BiC,AkC6B/BV,EETgB,CAAmB,GpCpBnC,CoCmBkC,CpCnBK,QkC6BlC;AvB2BR,AF7DG,ATME,AU4IN,A0BxHc,AvBjBhB,CF2CF,KyB1BkB,G1BwHT,SV5IO,MAAM,AoCoBc,C1BwHhC,CAAuB,A0BxHW,CpCpBb,EU4IrB,CAA2B,CV5IF,AoCoBc,CpCpBb,EU4I1B,EAAiC,MV5I3B,CADqC,AU6I3C,CV3IM,CUsIqD,CAM3D,G0B3HsC;A3BvBlC,ATOE,AU4IN,A0BzHc,A7BlIlB,M6BkIkB,WAAW,EAAE,KAAK;AzBoCpC,AF7DQ,ATOE,AU4IN,A0B7HsC,I3BtBlC,C2BsBQ,CzBuCV,AyBxCoB,GAMV,C3B3BF,CAAC,QAAP,CAAiB,C2B2BT,CAAA,EzBkCQ,GACpB,cF9DI,CAAuC,Q2B2B/B,CAA4B,M3B3BpC,A2B2BoC,CAAA,C3B3BoB,K2B2BpB,CAAA,G3B3BpC,CyBmC6DE,kBAAkB,CAACK,OAAQ,WAAUG,MAAO;AvB4B7G,AF9DI,ATOE,AU4IN,A0BxHc,A7BlIlB,CIqKK,KyBnCa,EzBmCd,EAAmC,KAAnC,EAA+C,IAA/C,GyBnCgC,EzBmCoC,AyBnClC,KAAK,kBADC;AzBqCtC,ARzCJ,AMrBK,ACmJH,A0BxHc,EzBmCZ,ARzCJ,IiCMgB,EzBmCN,CAAC,MAAP,CAAc,CRzCH,AiCMY,CjCNX,CiCMa,EzBmCN,ARzCR,CQyCS,CRzCC,CiCMS,EzBmCX,CAAnB,EAA2B,OAA3B;AACD,ARzCD,AHfM,AoCkBkC,A7BhL5C,CIkNA,IyBlC4C,EAGvB,EjCNZ,GiCMiB,IpCrBZ,EGeV,EHfc,CGeG,AHfF,GGef,CiCGwC,CAA5B,CAIE,SpCtBJ,KAAyB,IAAzB,IAAiC,KAAK,KAAK,aAA/C,EAA8D;AW0DxE,AR1CI,AMtBE,ATOM,QSPA,CNsBH,KHfG,AoCsBE,EjCPV,GAAe,AHfF,GGeK,AMtBI,CNsBH,EMtBM,C2B6Bf,CAAA,M3B7BuB,CNsBjC,AMtBkC,W2B6BxB,CAAkB,C3B7BH,CAAuB,I2B6BpB,CAAA,E3B7BH,CAAvB,CAzBwE,CA0BxE,C2B4B0B,CAAA;AjCN7B,AMrBG,ATMM,AU2IR,A0BrHU,MAAA,E1BqHN,A0BrHQ,EAAE,IpCtBN,CU2IG,A0BrHQ,C1BqHP,C0BtHgB,GpCrBd,CAAC,KU2IX,IAAsB,GV3IlB,CAAoB,CU2IG,SAAL,CAAe,CV3ID,EAAhC,EAAoC,IAApC,KU2IkB,CAA8B,IAA9B,CAA1B,EAA+D,EwB9GER,kBAAkB,CAACK,OAAQ,WAAUG,MAAO;A/BZ/G,AMtBI,ATMK,AU2IL,A0BrHQ,MAAA,EAAE,EAAE,KAAK;A3B3BjB,ACiJD,A0BxH2B,AvBlBpB,EAAA,GuBkBoB,EAGf,KAAK,MvBrBM,GAAA,IuBkBI,CAAlB,CAIA;A3B5BR,ATKI,AaEN,WuBsBO,AvBtBA,CbFD,IaEM,SbFO,GAAG,AaEf,CAAkB,IbFnB;AACA,AU2IN,AG1I0B,KuBH1B,CvBG0B,IH0IpB,AG1IwB,EAAE,CH0IvB,GAAG,CV3ID,KAAL,CAAW,AU2IE,IV3Ib,AU2IM,CV3IU,IU2IM,QAAhB,GAA2B,MAAM,EAAjC,GAAsC,KAAK,IAAI,EAA3D;ADhJE,ATKqB,AU4IvB,A0BnHD,AvBxB0B,IH2IzB,CG3IO,CAAP,CJNO,GCiJD,CDjJK,ACiJJ,CDjJK,ETKW,CSLR,CAAb,EAAgB,ATKS,CSLR,CTKU,ESLP,GCiJtB,CV5IsB,AU4IA,EDjJpB,EAA4B,CAAC,ACiJJ,EDjJzB,EAAiC,KCiJnC,EAAsC,IAAtC,EAA4C,qBwB7GqBR,kBAAkB,CAACM,MAAO,WAAUE,MAAO;AzBnCxG,ATIiC,AU6InC,AG3IH,UJNW,ITI2B,CSJtB,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,ATGkB,AU8IpB,A0B1PiC,AvBgHrC,EuBwBF,E3B/BQ,ECiJF,GDjJO,ACiJJ,CDjJK,ECiJL,CV9IC,EAXqC,CAYrC,ISJF,CAAkB,WAAlB,CAA8B,KAA9B;ANsBN,AMrBM,ATIE,AU6IF,EP5HN,EMrBM,WCiJQ,CP5HA,CAAC,CMrBK,CAAC,CCiJ2B,CP5HlC,EAAe,AO4Hf,CAAR,MDjJA,IAA+B,KAAK,CAAC,WAArC;ANsBJ,AMrBG,ACiJA,GDpLuE,CNwD1E,AMpBE,GC4I0C,CPxHxC,CAAC,QAAL,CAAc,KAAK,SAAL,GAAiB,6BAA/B,E+Be8DR,kBAAkB,CAACM,MAAO,WAAUE,MAAO;AlChCnG,AoC0BV,cAAc,CAAC,CpC1BD,IAAI,CAAC,AoC0BnB,CAAsB,UpC1BR,KAAqB,EoC0BnC,EpC1BU,AoC0B+B,EpC1BA,YoC0BzC;AjCRI,AHjBS,AU6IP,IP5HF,EO4HE,EP5HE,CAAC,AO4HA,CAAwB,IV7IpB,CU6IJ,EP5HL,AO4H2C,CP5H7B,AHjBW,CAAC,IGiBP,AHjBV,GAAwB,EAAxB,EGiBK,GAAe,6BAA7B;AACD,AMrBG,ATIK,AU6IH,AHvSR,EEsJM,WTEI,CU+II,KV7IG,GU6IK,GACT,KDlJqB,ACkJmB,CDlJlB,GCkJtB,CADL,KDjJ0B,CAA5B,CArCwE,CAsCxE;ANsBJ,AMrBI,ATGM,AU8IH,SwBnIH,GAuBE,CxB4GyC,CV9IrC,EU8IH,AwB5GI,IxB4GqD,KAAzD,EV9IgB,CAAC,IAAd,CAAmB,IAAnB;AACA,MkCkCNA,MAAM,ElClCA,GkCkCK,ElClCA,SkCkCX,GACEV,gBAAK;AzBtCP,ATIK,AU6IF,QDjJG,KCiJiC,EDjJ1B,GAAG,SCiJb,CAAmD,IAAnD,CDjJ4B,CAAC,ACiJ4B,ODjJ5D,CCiJG;AACF,OAVyC;ADvI1C,ATII,MSJA,CAAC,CAAC,ITIF,ISJJ,EAAgB,GTIH,gDkCoCkDE,kBAAkB,CAACK,OAAQ,WAAUD,WAAY;AzBvC9G,ATIC,AU6IH,AG1IM,EAAA,IH0IN,KVlKE,EawBe,GAAA,CbHR,CU6IG,EAAE,IAX4B,wBDtIjB,QAAvB,EAAiC,cAAjC,EAAiD,OAAO,CAAC,UAAzD;AACD,ATIG,AU6IJ,AG1IF,GJTE,GCmJA,GDjJO,CIOH,MbHI,AU6IE,AG1IA,CbHD,CU6IG,CG1IE,CbHF,CAAC,CAAT,EaGe,WAAL,CAAuC,OAAvD;AVeF,AMrBM,ACoIwC,EP/G9C,EMrBM,CCoIJ,MDpIW,CAAC,KNqBC,CAAC,GAAD,EAAc,CMrBvB,CAAqB,cAArB,EAAqC,OAAO,CAAC,UAA7C;ANsBJ,AMrBG,ATGG,AU8IP,AG3IC,GJnD0E,CNkE1E,AMpBE,GNoBC,CAAC,AUfA,MAAM,CAAC,CVeX,CAAa,EHlBA,CAAC,CAAC,AaGX,CVec,EHlBC,EaGG,CAAtB,CbHmC,CAAC,AaGX,EVeZ,EHlBM,CGkBW,AHlBW,OAAtB,CAA8B,MAA9B,EAAsC,CAAC,GAAG,CAA1C,CAAN,MAAwD,CGkBrE,AHlBsE,CAAhE,EAAmE;ASDvE,ATEM,AU+IV,AG5II,qEqBkC+DJ,kBAAkB,CAACK,OAAQ,WAAUD,WAAY;A/BnBlH,AMnBE,ATEM,AaGP,KAJkB,CAKnB,GVaK,OAAL,GAAe,GAAG,CAAC,OAAnB;AACA,AHjBQ,AaIR,IVaA,GAAG,CAAC,OAAJ,GAAc,KAAK,SAAnB;AACD,AHjBS,AaIR;AJPE,ATIM,AaIR,AN5JJ,EEoJM,MAAM,CAAC,QAAP,CAAiB,CTIN,KAAL,CAAW,IAAX,CAAgB,SSJtB,CAAuC,eAAvC,EAAwD,SAAxD;AEkEC,AR5CL,AMrBI,ATGuB,AaKzB,EVaF,IQ4CW,EFjED,ENqBF,CAAC,EMrBM,GNqBP,AMrBU,ATGS,EW8DJ,AR5CA,EHlBQ,CW8DJ,CX9DM,CSHR,CAAC,IEiEA,AX9DA,IW+DxB,KFlEgB,CAAsB,OAAtB,CAAd,uByByC+DJ,kBAAkB,CAACM,MAAO,WAAUF,WAAY;AvB0BjH,AR7CA,AHnBuC,SGmBlC,OHnBkC,KAAK,EGmB5C,AHnB8C,CAAC,EGmBzB,KAAtB;AQ8CA,AR7CD,AMtBG,ATEsB,AUgJhB,MDlJF,GCkJS,GDlJH,CAAC,ETEL,EUgJA,GAAe,CDlJjB,CAAiB,YAAjB,IAAiC,KAAK,KAAK,IAA/C,EAAqD;AEoEvD,AFnEI,ATEI,AUgJR,AG3IA,ANrJJ,QMqJQ,MbLI,AaKE,CAAC,QbLM,AaKb,KAAoB,SAApB,IAAiC,CAAC,MAAM,CAAC,QAAP,CAAgB,YAAtD,EAAoE;AF6DpE,AR7CF,AMtBM,ATEG,AUgJP,AG3IE,ANpIN,EJmJE,IUfI,EVeE,EO4HE,CP5HF,CUfI,CAAC,MH2IM,EG3Ib,CH2IgB,AG3IA,MH2IM,CAAC,IG3IvB,CAA6B,SH2Ib,CAAsB,IAAtB,CAAlB,MG3IE,CACI,MAAM,CAAC,GAAP,AqBkCwDJ,CrBlC5C,CAAD,IAAO,CAAC,CAAC,OAApB,CADJ,EACkC,AqBkC4C,CAACM,IrBlCxC,EqBkC+C,OrBnCtF,WqBmCuGF,WAAY;AvB0BpH,AR7CD,AMtBI,ATEC,AaMJ,ANrIL,CIgMM,GFnEE,CIKJ,MViBO,AUdA,IJRQ,AIQJ,CJRK,EEmEf,EAAyC,IAAzC,IFnEG,CEoEE,AFpEuB,IEoEnB,CFpEwB,CAAC,GEoEpB,CR9CI,KAAK,AMtBK,CAAgB,EEoExC,EFpEwB,CEqExB,AFrED,AIQG,EJR6C,AIQZ,MVcjC,CAAP,EAAyC,EMtBsB,CAAC,IEqEzC,CAAC,KFrEpB,EEqEmB,EAAU,iBAAV,EAAuC,IAAvC,CADlB,GAEA,oBAAoB,CAAC,OAAD,EAAU,iBAAV,CATtB;ARtCD,AMtBC,ATEA,AU+IH,AGzIG,ANrIP,GEyHM,KCqJE,CDjJK,ACiJJ,EGzIG,CVcA,CMtBK,CAAC,CAAC,GCiJD,CAAC,EP3HE,AUdd,CAA+B,CJRzB,CNsBW,CMtBK,INsBA,IO2HpB,CAAyB,MGzI3B,GVcD,AO2HG,AGxIC,CHwIN,EAA0C,GGxI9B,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,CAAC,UAApB,CADH;AVeD,AMtBE,ATEH,AU+IC,AGxID,ANtIL,CAAC,IPZiE,Aa+IvD,CbFP,AU6IE,CH9QC,CAAC,GJmJG,AUbA,IHwII,CAAC,QAAV,CP3HA,AInJC,CAAN,EJmJ2B,GInJG,MAAM,CAAC,IJmJhC,aInJ+B,CAAN,GAA4B,EAA1D,CAAD,EAAgE,IAAhE,CAAqE,OAArE;AJoJM,AMtBE,ACiJH,AGxIC,ANrIN,MJkJM,G+BFA,GAuBE,G/BrBO,CAAC,A+BqBH,I/BrBE,CAAT;AACD,AMtBG,AISF,MqBkCAxL,GAAG,KAAK,MAAR,GACEkL,gBAAK;AzB3CL,ATEJ,AU8IA,AGvIE,SbPG,AU8IA,EGvIE,IbPI,CAAX,EU8IA,EV9IgB,EU8IE,IAAlB,OV9IA,EAA+B,IaO7B,GAAoC,IAApC;AVaF,AMrBI,ATEF,AaOD,MbPC,CAAC,CAAC,EGmBE,KAAK,GAAG,AHnBZ,CAAc,IGmBG,OHnBjB,CAA0B,CAA1B,KGmBF;AMpBI,ATEH,AU6ID,AGtID,SHsIM,sBAAL,GAPuB,CAQvB,uCwBpGsEM,WAAY;A/BvBlF,AMpBI,ATEL,AO/HI,MAAM,EJiJL,EIjJS,GJiJJ,AIjJO,CAAC,IJiJH,GIjJE,EAAgC,GAAG,MJiJnD,AIjJgB,EJiJQ,GIhJxB,IAAI,8BAAJ,CAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,kDAA5C,CADG;AJkJD,AMpBE,AISN,ANpIF,EMoIE,iBAAiB,GAAA;AVYd,AMpBG,ATrJa,AUmSjB,AGrIA,IJTI,KC8IC,CGrIC,CJTK,CAAC,YAAR,CAAqB,EISzB,GADe,CAEf,CHoIA,GAA+B,ID9I3B,AC8I+B,ED9IM,CC8IV,EAA/B,CATuB,CAUvB,ED/IgD,CAAC,UAA7C;AACA,AC+IJ,AGrIA,UJVU,OAAO,GAAG,IAAI,GAAJ,EAAhB,0CyB4C+DA,WAAY;A/BxB/E,AMnBI,AC+IJ,ID/II,INmBA,GMnBO,CAAC,GAAR,CAAY,GNmBD,CAAC,KAAD,CAAf,EAAwB,EMnBpB;ANoBF,AMnBE,AC+IJ,AGtIA,QAAI,EVUE,GUVG,EVUE,KAAK,GUVZ,EVUiB,EUVE,GVUrB,EAA0B,CUVC,CAAC,QAAP,KAAoB,EJTf,OIS5B,CJTI,CISkD,CJThB,OAAlC;ANoBA,AMnBD,ATDP,AaUM,MbVA,AaUA,MAAM,CVUC,AUVA,CbVC,GAAG,CAAC,GAAD,AaUX,CAAgB,CbVS,EGoBvB,CAAkB,GHpBT,EGoBT,GHpBkD,AaUpD,CAA6B,IAA7B;AVWC,AMnBF,ATDH,AU+IE,AGrIC,CJ/EL,OTqEQ,AU+IA,CwB9GF,GAaE,ClC9CK,AU+IA,GV/IG,AkC8CH,GlC9CM,CAAC,MAAJ,CU+IR,CAAoB,CV/IC,MAAM,CAAC,MAAlC,WU+ImD,CAAC,YAAD,EAAe,IAAf,CAA7C,CAAJ,EAAwE;AP1HvE,AMdL,ATNE,AU+II,AGrIH,GqBrFI,E/B2FH,IHhBK,EGoBE,CO2HC,EV/IE,CGoBC,EO2HE,CV/IC,CAAT,CGoBW,AO2HA,GV/IG,EU+IE,CV/IC,CAAC,KGoBK,AHpBT,CAAU,EU+I3B,CADsE,CAEtE,CVhJiB,MAAqB,MAA1C,YGoBS,EAAqC;AAC1C,AHpBL,AaWC,ANzIK,CP2HP,KO3Ha,GAAG,EJkJL,CIlJQ,CAAC,OAAD,EAAgC,GAAG,MAAnC,EJkJb,CAA4B,EIjJ9B,GJiJE,CIjJE,iCAAJ,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,KAAvC,EAA8C,kDAA9C,CADG;AJmJF,AO2HC,KP7HK,MAEA,CO2HC,GP3HG,KAAK,AO2HA,GAAG,CACf,GAAG,KP5HqB,CO4Hf,CAAC,EP5HP,EAA2B,eO4H3B,CAA2B,KAA3B,CADY,EAEf,IAAI,OAAO,MAAM,CAAC,qBAAd,KAAwC,UAAzC,GACC,MAAM,CAAC,qBAAP,CAA6B,KAA7B,CADD,GAEC,EAFJ,CAFe,CAAjB,CAHsE,CAStE;APhIA,AHCC,MAAM,KGDF,YAAL,CAAkB,EHCS,GGD3B,AHC+B,IAAD,IAAwB,IAAI,CAAC,KAAL,KAAe,CAAC,CAArE,EAEP;AGFK,AHGL,AU6HM,AwBxGC,K/B1BI,C+B0BEM,K/BxBF,AOgIA,IPhII,EOgIE,CAAX,IAAgB,EwBxGS,C/BxBN,CAAC,C+BwBQ,CAAC,ExBwG7B,CPhImB,CAAd,AOgIqB,EPhIE;AAC5B,AOgIE,AwBxGNC,EAAAA,IADiC,K/BvBxB,gBAAL,CAAsB,KAAtB;AACD,AOgIG,AwBxGNnL,EAAAA,G/B1BS,C+BwBwB,K/BtBxB,IAAI,KAAK,KAAK,aAAd,EAAuB;AAC5B,AOgIE,AwBxGNoL,EAAAA,MAHiC,G/BrBxB,KAAL,GAAa,aAAb;AACA,AOgIE,AwBxGNC,EAAAA,MAJiC,G/BpBxB,EOgIE,GPhIP,WOgIE,CAAoB,CAApB,EAAwB,KAAa,CAAC,CAAD,CAArC;AP/HH,AHDE,AUiIA,AG3IK,AqBmCVC,ErBnCU,AqBmCVA,G/B3BS,CHEE,EaVK,AqB8BiB,CrB9BhB,EVWR,OHDc,GAAG,KaVV,CbUgB,CaVkB,ObUV,CAAC,aAAT,CAAuB,EAAvB,CAA3B;AGED,AHAN,AUgIK,AG3ID,AqBmCFrJ,EAAAA,IANiC,IrB7BzB,MAAN,CAAa,iBAAb;AVYE,AOgIH,AG3IC,AqBmCFsJ,EAAAA,EAPiC,MrB5BzB,CVWC,YAAL,CAAkB,AUXA,GAAG,EVWrB,GUX0B,MAAL,EAAvB;AVYC,AOiIH,AwBzGAC,EAAAA;A/BvBC,AUZC,AqB2B+B,CAAD,KAS5B,ErBpCE,cAAc,YAAY,uBAA9B,EAA8C;AAC3C,AqBoCL,QAAMC,GrBpCI,WAAL,CACI,IqBmCgB,ErBpCpB,CAEO,AqBkCgBC,MAAM,CAAC,OrBpC9B,EAGO,KAAK,GqBiCiB,CAAN,CAA0BpJ,IAA1B,CrBpCvB,AqBoCsDL,ErBhC/C,EqBgCgB,CAA5B;A/BvBQ,AUTK,AqBiCb,E/BxBQ,MUTK,AqBiCP0J,E/BxBU,CAAC,IAAD,EAAW,AUTL,EAAE,IqBiCH,CrBjCQ,EqBiCLP,MAAM,CrBjClB,AqBiCmBQ,KAAP,CAAa,GAAb,EAAkBpN,MAAlB,IAA4B,EAApD;A/BvBE,AUVsC,AqBkCxC,QrBlCwC,CVUjC,A+BwBA8L,O/BxBL,CAAa,GUVqC,EAAE,GqBkC1C,E/BxBV,CAAyB,YAAzB,CAAsC,IAAtC,EAA4C,KAAK,OAAjD;AACD,AUXW,OAJP;AH+IG,AG1IL,KAT+C,CAUhD,GHyIa,yBAAP,CACJ,IADI,EACe,OADf,EAC2C;AP/H3C,AOgIN,AG1IA,EVUM,QOgIA,IPhIY,A+BwBR,C/BxBS,IOgIJ,CPhIG,EAAY,AOgIZ,OAAO,CAAC,QwBxGP,CxBwGnB;AP/HA,AOgIA,AG1IA,AqBkCIuB,IAAAA,I/BxBA,GOgIG,CwBxGK,C/BxBH,C+BwBM,GAAEN,C/BxBb,C+BwBe,CxBwGH,EwBxGM,C/BxBH,EOgIE,CwBxGM,E/BxB3B,EAA0B,AOgInB,AwBzGY,GxB0Gf,SADG,GAEF,OAAO,SAAP,KAAq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,Q+B6BA,c/B7BsB,CAAC,KAAD,EAAsB,M+B6BjCJ,MAAX,CAAmB;A/B5BzB,AUnMc,UVmMR,AUnMQ,CAAC,OVmMD,GAAG,CUnMH,CAAA,GVmMQ,AUnMQ,IAAhB,GVmMG,CAAa,eAAb,CAA6B,KAA7B,CAAjB;AUlMF;AVmME,QAAI,KAAK,KAAL,YAAsB,kCAAtB,IACA,KAAK,KAAL,CAAW,QAAX,KAAwB,QAD5B,EACsC;AACpC,M+B6BAK,K/B7BK,KAAL,CAAW,MAAX,CAAkB,C+B6BC,GACjBnB,C/B9BqB,CAAC,MAAxB,Q+B8BO;A/B7BR,AOyIK,KP5IN,IO4Ia,EPzIN,uBOyID,CACJ,KADI,EACY,OADZ,EACwC;APzI5C,AMXC,ACqJH,MDrJS,ECqJL,IDrJW,GACf,ACoJW,CDpJV,ACoJW,MDpJZ,CCoJI,CDnJH,ICmJuB,KDpJxB,EAEC,ECkJD,EAAmC,GDpJnC,KAEgC;ANS9B,AMRA,ACkJA,MDlJI,CAAC,OAAD,IAAY,EyBsCF,KzBtCS,OAAP,KAAmB,OyBsCZ,CzBtCnB,IAA2C,CAAC,OAAO,CAAC,SAAxD,EAAmE;ANSnE,AMRE,ACkJH,AwB5GSuB,IAAAA,MzBtCA,EyBsCQ,EzBtCJ,AyBsCO,GAAEN,EzBtCb,AyBsCe,CzBtCL,EyBsCQ,GAAI,IADP,4BzBrCf,CAAN;ANSF,AMRC,AyBsCOtK,IAAAA,MAAM,EAAG,GAAEsK,EAAE,GAAG,GAAI,IAFL;A/B3BvB,AOyIF,AwB3GU1K,IAAAA,KAAK,CxB2GT,CwB3GY,C/B9BV,EOyIE,AwB3GU2K,EAAE,CxB2GT,EwB3GY,C/B9BT,C+B8BY,E/B7BtB,COwIc,CAAC,AwB9GI,E/B1Bf,EOwIV,gCPxIM,CAAqB,QAArB,EAA+B,KAAK,CAAC,SAArC,EAAgD,KAAK,OAArD,CADJ;AMRA,ACkJF,AG7UK,AqBkOKxK,IAAAA,IzBvCF,AyBuCM,ExB2GR,AG7UD,AqBkOY,CrBlOZ,EqBkOcwK,EAAE,EzBvCJ,AI3LZ,CqBkOmB,CxB2GT,CDlJK,AI3LN,EH6UI,AwB3GW,KzBvCF,CAAC,CCkJH,CAAC,ODlJxB,ECkJF,AG7UK;AVqMH,AOyIF,AwB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","file":"composited-card.acf6a8e7.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection and if one is pending connection the\n    // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n    // update, otherwise requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve!: (r: boolean) => void;\n    let reject!: (e: Error) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await previousUpdatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    try {\n      const result = this.performUpdate();\n      // If `performUpdate` returns a Promise, we await it. This is done to\n      // enable coordinating updates with a scheduler. Note, the result is\n      // checked to avoid delaying an additional microtask unless we need to.\n      if (result != null) {\n        await result;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    resolve(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      throw e;\n    } finally {\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    // The Closure JS Compiler does not always preserve the correct \"this\"\n    // when calling static super methods (b/137460243), so explicitly bind.\n    super.finalize.call(this);\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","var POLYFILL_CONSOLE_OUTPUT = 'function ResizeObserver () { [polyfill code] }';\nvar prettifyConsoleOutput = function (fn) {\n    Object.defineProperty(fn, 'toString', {\n        value: function () { return POLYFILL_CONSOLE_OUTPUT; }\n    });\n    return fn;\n};\nexport { POLYFILL_CONSOLE_OUTPUT, prettifyConsoleOutput };\n","var global = typeof window === 'undefined' ? this || {} : window;\nexport { global };\n","import { process } from '../ResizeObserverController';\nimport { prettifyConsoleOutput } from './prettify';\nimport { global } from './global';\nvar CATCH_FRAMES = 60 / 5;\nvar requestAnimationFrame = global.requestAnimationFrame;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar rafSlot = new Map();\nvar resizeObserverSlot = new Map();\nvar scheduled;\nvar dispatchCallbacksOnNextFrame = function () {\n    if (scheduled) {\n        return;\n    }\n    scheduled = true;\n    function runSchedule(t) {\n        scheduled = false;\n        var frameCallbacks = [];\n        var resizeObserverCallbacks = [];\n        rafSlot.forEach(function (callback) { return frameCallbacks.push(callback); });\n        resizeObserverSlot.forEach(function (callback) { return resizeObserverCallbacks.push(callback); });\n        rafSlot.clear();\n        resizeObserverSlot.clear();\n        try {\n            for (var _i = 0, frameCallbacks_1 = frameCallbacks; _i < frameCallbacks_1.length; _i++) {\n                var callback = frameCallbacks_1[_i];\n                callback(t);\n            }\n        }\n        finally {\n            for (var _a = 0, resizeObserverCallbacks_1 = resizeObserverCallbacks; _a < resizeObserverCallbacks_1.length; _a++) {\n                var callback = resizeObserverCallbacks_1[_a];\n                callback(t);\n            }\n        }\n    }\n    ;\n    requestAnimationFrame(runSchedule);\n};\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (frames) {\n        var scheduler = this;\n        resizeObserverSlot.set(this, function ResizeObserver() {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                if (elementsHaveResized) {\n                    scheduler.run(60);\n                }\n                else if (frames) {\n                    scheduler.run(frames - 1);\n                }\n                else {\n                    scheduler.start();\n                }\n            }\n        });\n        dispatchCallbacksOnNextFrame();\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run(CATCH_FRAMES);\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            if ('MutationObserver' in global) {\n                this.observer = new MutationObserver(this.listener);\n                this.observe();\n            }\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar rafIdBase = 0;\nglobal.requestAnimationFrame = function (callback) {\n    if (typeof callback !== 'function') {\n        throw new Error('requestAnimationFrame expects 1 callback argument of type function.');\n    }\n    var handle = rafIdBase += 1;\n    rafSlot.set(handle, function AnimationFrame(t) { return callback(t); });\n    dispatchCallbacksOnNextFrame();\n    return handle;\n};\nglobal.cancelAnimationFrame = function (handle) {\n    rafSlot.delete(handle);\n};\nprettifyConsoleOutput(global.requestAnimationFrame);\nprettifyConsoleOutput(global.cancelAnimationFrame);\nexport { scheduler };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","var DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return Object.freeze(this);\n    }\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isReplacedElement };\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { global } from '../utils/global';\nvar cache = new Map();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return Object.freeze({\n        inlineSize: (switchSizes ? blockSize : inlineSize) || 0,\n        blockSize: (switchSizes ? inlineSize : blockSize) || 0\n    });\n};\nvar zeroBoxes = Object.freeze({\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target) {\n    if (cache.has(target)) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = Object.freeze({\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox) {\n    var _a = calculateBoxSizes(target), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize;\n    return observedBox === ResizeObserverBoxOptions.BORDER_BOX ? borderBoxSize : contentBoxSize;\n};\nexport { calculateBoxSize, calculateBoxSizes, cache };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { resizeObservers } from '../ResizeObserverController';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../ResizeObserverController';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = boxes.borderBoxSize;\n        this.contentBoxSize = boxes.contentBoxSize;\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../ResizeObserverController';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../ResizeObserverController';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { cache as sizeCache } from './calculateBoxSize';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    sizeCache.clear();\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { scheduler } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { hasActiveObservations } from './algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from './algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from './algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from './algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from './algorithms/gatherActiveObservationsAtDepth';\nvar resizeObservers = [];\nvar observerMap = new Map();\nvar watching = 0;\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        resizeObservers.push(detail);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            if (getObservationIndex(detail.observationTargets, target) < 0) {\n                detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n                updateCount(1);\n                scheduler.schedule();\n            }\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            var index = getObservationIndex(detail.observationTargets, target);\n            if (index >= 0) {\n                detail.observationTargets.splice(index, 1);\n                updateCount(-1);\n            }\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        if (observerMap.has(resizeObserver)) {\n            var detail = observerMap.get(resizeObserver);\n            resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            observerMap.delete(resizeObserver);\n            updateCount(-detail.observationTargets.length);\n        }\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController, resizeObservers, process };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { POLYFILL_CONSOLE_OUTPUT } from './utils/prettify';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (target instanceof Element === false) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (target instanceof Element === false) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return POLYFILL_CONSOLE_OUTPUT;\n    };\n    return ResizeObserver;\n}());\nexport default ResizeObserver;\nexport { ResizeObserver };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\nexport interface StyleInfo {\n  readonly [name: string]: string;\n}\n\n/**\n * Stores the StyleInfo object applied to a given AttributePart.\n * Used to unset existing values when a new StyleInfo object is applied.\n */\nconst styleMapCache = new WeakMap<AttributePart, StyleInfo>();\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the `styleInfo`\n * object and adds the property values as CSS propertes. Property names with\n * dashes (`-`) are assumed to be valid CSS property names and set on the\n * element's style object using `setProperty()`. Names without dashes are\n * assumed to be camelCased JavaScript property names and set on the element's\n * style object using property assignment, allowing the style object to\n * translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo {StyleInfo}\n */\nexport const styleMap = directive((styleInfo: StyleInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'style' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `styleMap` directive must be used in the style attribute ' +\n        'and must be the only part in the attribute.');\n  }\n\n  const {committer} = part;\n  const {style} = committer.element as HTMLElement;\n\n  // Handle static styles the first time we see a Part\n  if (!styleMapCache.has(part)) {\n    style.cssText = committer.strings.join(' ');\n  }\n\n  // Remove old properties that no longer exist in styleInfo\n  const oldInfo = styleMapCache.get(part);\n  for (const name in oldInfo) {\n    if (!(name in styleInfo)) {\n      if (name.indexOf('-') === -1) {\n        // tslint:disable-next-line:no-any\n        (style as any)[name] = null;\n      } else {\n        style.removeProperty(name);\n      }\n    }\n  }\n\n  // Add or update properties\n  for (const name in styleInfo) {\n    if (name.indexOf('-') === -1) {\n      // tslint:disable-next-line:no-any\n      (style as any)[name] = styleInfo[name];\n    } else {\n      style.setProperty(name, styleInfo[name]);\n    }\n  }\n  styleMapCache.set(part, styleInfo);\n});\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {isPrimitive} from '../lib/parts.js';\nimport {directive, NodePart, Part} from '../lit-html.js';\n\ninterface PreviousValue {\n  readonly value: unknown;\n  readonly fragment: DocumentFragment;\n}\n\n// For each part, remember the value that was last rendered to the part by the\n// unsafeHTML directive, and the DocumentFragment that was last set as a value.\n// The DocumentFragment is used as a unique key to check if the last value\n// rendered to the part was with unsafeHTML. If not, we'll always re-render the\n// value passed to unsafeHTML.\nconst previousValues = new WeakMap<NodePart, PreviousValue>();\n\n/**\n * Renders the result as HTML, rather than text.\n *\n * Note, this is unsafe to use with any user-provided input that hasn't been\n * sanitized or escaped, as it may lead to cross-site-scripting\n * vulnerabilities.\n */\nexport const unsafeHTML = directive((value: unknown) => (part: Part): void => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('unsafeHTML can only be used in text bindings');\n  }\n\n  const previousValue = previousValues.get(part);\n\n  if (previousValue !== undefined && isPrimitive(value) &&\n      value === previousValue.value && part.value === previousValue.fragment) {\n    return;\n  }\n\n  const template = document.createElement('template');\n  template.innerHTML = value as string;  // innerHTML casts to string internally\n  const fragment = document.importNode(template.content, true);\n  part.setValue(fragment);\n  previousValues.set(part, {value, fragment});\n});\n","import { html } from 'lit-element';\nimport { styleMap } from 'lit-html/directives/style-map';\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\n\nconst artQualities = {\n  normal: 250,\n  high: 375,\n  best: 500,\n};\n\nconst layerQualities = {\n  normal: 256,\n  high: 512,\n  best: 1024,\n};\n\nexport const loadingTemplate = () => html`\n  loading ...\n`;\n\nexport const baseArtworkLayersTemplate = ({\n  resolutionSettings,\n  useHiResAssets,\n  protoId,\n}) => {\n  return html`\n    <picture class=\"card__artwork\">\n      <source\n        srcset=\"https://images.godsunchained.com/art/${useHiResAssets\n          ? '500'\n          : '375'}/${protoId}.webp\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/art/${useHiResAssets\n          ? '500'\n          : '375'}/${protoId}.jpg\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/jpg\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/art/${useHiResAssets\n          ? '375'\n          : '250'}/${protoId}.webp\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/art/${useHiResAssets\n          ? '375'\n          : '250'}/${protoId}.jpg\"\n        type=\"image/jpg\"\n      />\n      <img\n        src=\"https://images.godsunchained.com/art/${useHiResAssets\n          ? '375'\n          : '250'}/${protoId}.jpg\"\n        class=\"card__artwork__img\"\n      />\n    </picture>\n  `;\n};\n\nexport const mythicImageLayersTemplate = ({\n  type,\n  resolutionSettings,\n  qualityName,\n}) => {\n  return html`\n    <picture class=\"card__baseLayer\">\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/creature_hyperion.webp\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/creature_hyperion.png\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/png\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/creature_hyperion.webp\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/creature_hyperion.png\"\n        type=\"image/png\"\n      />\n      <img\n        src=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/${type}_${qualityName}.png\"\n        class=\"card__baseLayer__img\"\n      />\n    </picture>\n\n    <picture class=\"card__manaLayer\">\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/mythic_hyperion.webp\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/mythic_hyperion.png\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/png\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/mythic_hyperion.webp\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/mythic_hyperion.png\"\n        type=\"image/png\"\n      />\n      <img\n        src=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/mythic_hyperion.png\"\n        class=\"card__manaLayer__img\"\n      />\n    </picture>\n  `;\n};\n\nexport const nonMythicImageLayersTemplate = ({\n  type,\n  resolutionSettings,\n  qualityName,\n  rarity,\n  god,\n  set,\n}) =>\n  html`\n    <picture class=\"card__baseLayer\">\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/${type}_${qualityName}.webp\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/${type}_${qualityName}.png\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/png\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/${type}_${qualityName}.webp\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/${type}_${qualityName}.png\"\n        type=\"image/png\"\n      />\n      <img\n        src=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/${type}_${qualityName}.png\"\n        class=\"card__baseLayer__img\"\n      />\n    </picture>\n\n    <picture class=\"card__manaLayer\">\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/${god}_${qualityName}.webp\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/${god}_${qualityName}.png\"\n        media=\"(-webkit-min-device-pixel-ratio: 2)\"\n        type=\"image/png\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/${god}_${qualityName}.webp\"\n        type=\"image/webp\"\n      />\n      <source\n        srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/${god}_${qualityName}.png\"\n        type=\"image/png\"\n      />\n      <img\n        src=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/${god}_${qualityName}.png\"\n        class=\"card__manaLayer__img\"\n      />\n    </picture>\n\n    ${rarity !== 'common'\n      ? html`\n          <picture class=\"card__rarityLayer\">\n            <source\n              srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/rarity_${rarity}.webp\"\n              media=\"(-webkit-min-device-pixel-ratio: 2)\"\n              type=\"image/webp\"\n            />\n            <source\n              srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/rarity_${rarity}.png\"\n              media=\"(-webkit-min-device-pixel-ratio: 2)\"\n              type=\"image/png\"\n            />\n            <source\n              srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/rarity_${rarity}.webp\"\n              type=\"image/webp\"\n            />\n            <img\n              src=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/rarity_${rarity}.png\"\n              class=\"card__rarityLayer__img\"\n            />\n          </picture>\n        `\n      : null}\n    ${rarity === 'legendary'\n      ? html`\n          <picture class=\"card__wreathLayer\">\n            <source\n              srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/wreath_${qualityName}.webp\"\n              media=\"(-webkit-min-device-pixel-ratio: 2)\"\n              type=\"image/webp\"\n            />\n            <source\n              srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.highDpi}/wreath_${qualityName}.png\"\n              media=\"(-webkit-min-device-pixel-ratio: 2)\"\n              type=\"image/png\"\n            />\n            <source\n              srcset=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/wreath_${qualityName}.webp\"\n              type=\"image/webp\"\n            />\n            <img\n              src=\"https://images.godsunchained.com/card-layers/${resolutionSettings.lowDpi}/rarity_wreath_${qualityName}.png\"\n              class=\"card__wreathLayer__img\"\n            />\n          </picture>\n        `\n      : null}\n    ${set === 'core'\n      ? html`\n          <picture class=\"card__lockIconLayer\" *ngIf=\"cardProtoData.\">\n            <source\n              srcset=\"https://images.godsunchained.com/card-layers/lock_${qualityName}.webp\"\n              type=\"image/webp\"\n            />\n            <img\n              src=\"https://images.godsunchained.com/card-layers/lock_${qualityName}.png\"\n              class=\"card__lockIconLayer__img\"\n            />\n          </picture>\n        `\n      : null}\n  `;\n\nexport const textLayersTemplate = ({\n  mana,\n  name,\n  effect,\n  attack,\n  health,\n  type,\n  ch,\n  cw,\n}) => {\n  const isACreatureOrWeapon = RegExp(/creature|weapon/).test(type);\n  const crammedTextMode = effect.split(' ').length >= 14;\n  return html`\n    <div\n      class=\"card__manaText\"\n      style=${styleMap({\n        fontSize: `${ch * 10.5}px`,\n        top: `${ch * 5.5}px`,\n        left: `${cw * 9.5}px`,\n        width: `${cw * 19}px`,\n      })}\n    >\n      ${mana}\n    </div>\n    <div\n      class=\"card__nameText\"\n      style=${styleMap({\n        fontSize: `${ch * 4.93}px`,\n        bottom: `${ch * 35}px`,\n        left: `${cw * 12}px`,\n        right: `${cw * 5}px`,\n      })}\n    >\n      ${name}\n    </div>\n\n    <div\n      class=\"card__descriptionText\"\n      style=${styleMap({\n        fontSize: `${crammedTextMode ? ch * 3.8 : ch * 4}px`,\n        lineHeight: crammedTextMode ? 1.1 : 1.3,\n        bottom: `${ch * 7.75}px`,\n        height: `${ch * 22.5}px`,\n        left: `${cw * 20}px`,\n        right: `${cw * 12}px`,\n      })}\n    >\n      <div class=\"card__descriptionText__inner\">\n        ${unsafeHTML(effect)}\n      </div>\n    </div>\n\n    ${isACreatureOrWeapon\n      ? html`\n          <div\n            class=\"card__attackText\"\n            style=${styleMap({\n              fontSize: `${ch * 9.5}px`,\n              bottom: `${ch * 3.5}px`,\n              width: `${cw * 15}px`,\n              left: `${cw * 10.5}px`,\n            })}\n          >\n            ${attack}\n          </div>\n\n          <div\n            class=\"card__healthText\"\n            style=${styleMap({\n              fontSize: `${ch * 9.5}px`,\n              bottom: `${ch * 3}px`,\n              width: `${cw * 15}px`,\n              right: `${type === 'weapon' ? cw * 0.8 : cw * 4.5}px`,\n            })}\n          >\n            ${health}\n          </div>\n        `\n      : null}\n  `;\n};\n","import { css } from 'lit-element';\n\nconst headingText = css`\n  font-family: 'Unchained', serif;\n  line-height: 1.1;\n`;\n\nconst bodyText = css`\n  font-family: 'Open Sans', sans-serif;\n`;\n\nconst white = css`white`;\nconst black = css`black`;\n\nconst boldOutlinedText = css`\n  ${headingText}\n  font-weight: 700;\n  line-height: 1;\n  text-align: center;\n  color: ${white};\n  text-shadow: -1px -1px 1px ${black}, 1px -1px 1px ${black},\n    -1px 1px 1px ${black}, 1px 1px 1px ${black};\n`;\n\nexport const getStyles = () => css`\n  :host {\n    display: flex;\n    position: relative;\n    padding-bottom: 140%;\n    /* @NOTE: 140% === 717 / 512 = 1.400 * 100\n        the aspect of these cards is locked to 1:1.40 */\n    width: 100%;\n  }\n\n  img {\n    display: block;\n    width: 100%;\n  }\n\n  .card__artwork {\n    position: absolute;\n    width: 64%;\n    right: 15%;\n    top: 12%;\n  }\n\n  .card__baseLayer,\n  .card__manaLayer,\n  .card__rarityLayer,\n  .card__wreathLayer {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  .card__lockIconLayer {\n    position: absolute;\n    left: 53%;\n    top: 0%;\n    width: 22%;\n    transform: translate(-50%, 15%);\n  }\n\n  .card__manaText {\n    ${boldOutlinedText}\n    position: absolute;\n  }\n\n  .card__nameText {\n    position: absolute;\n    white-space: nowrap;\n    ${boldOutlinedText}\n  }\n\n  .card__descriptionText {\n    ${headingText}\n    position: absolute;\n    text-align: center;\n    color: black;\n    display: flex;\n  }\n\n  .card__descriptionText__inner {\n    ${bodyText}\n    margin: auto;\n  }\n\n  .card__attackText {\n    position: absolute;\n    ${boldOutlinedText}\n  }\n\n  .card__healthText {\n    position: absolute;\n    ${boldOutlinedText}\n  }\n`;\n","import { LitElement, html } from 'lit-element';\nimport ResizeObserver from '@juggle/resize-observer';\n\nimport {\n  loadingTemplate,\n  mythicImageLayersTemplate,\n  nonMythicImageLayersTemplate,\n  baseArtworkLayersTemplate,\n  textLayersTemplate,\n} from './templating';\n\nimport { getStyles } from './styles';\n\n// @TODO: these should really come from an endpoint call,\n// so that we can easily update them in the future...\nconst qualities = [\n  'plain',\n  // @NOTE: there may be \"0\" quality items in future, for now, these items\n  // can use the plain layer imagery assets\n  'plain',\n  'bronze',\n  'iron',\n  'meteorite',\n  'shadow',\n  'gold',\n  'diamond',\n  'mythic',\n];\n\nconst ro = new ResizeObserver(entries => {\n  entries.forEach(entry => entry.target.handleResize(entry));\n});\n\nconst loadFonts = () => {\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.type = 'text/css';\n  link.href = '/src/assets/fonts.css';\n  document.head.appendChild(link);\n};\n\n/**\n * @TODO: document this web-component...\n *\n * `<awesome-sauce>` injects a healthy dose of awesome into your page.\n * ## This is an h2 heading\n * In typical use, just slap some `<awesome-sauce>` at the top of your body:\n * <body>\n *   <awesome-sauce></awesome-sauce>\n * Wham! It's all awesome now!\n * @customElement\n * @polymer\n * @demo https://path/to/awesomeness/demo/\n *\n */\nclass CompositedCard extends LitElement {\n  static get properties() {\n    return {\n      protoId: { type: Number },\n      inputProtoData: { type: Object },\n      /*\n      @TODO: instead make this setting 3 options:\n      assetsQuality: \"normal\" | \"high\" | \"best\"\n      \"normal\" === same as now (default)\n      \"high\" === same as useHiResAssets = true\n      \"best\" === only use max-res assets\n      */\n      useHiResAssets: { type: Boolean },\n      resolutionSettings: {\n        lowDpi: Number,\n        highDpi: Number,\n      },\n      quality: Number,\n    };\n  }\n\n  static get styles() {\n    return getStyles();\n  }\n\n  constructor() {\n    super();\n    /*\n      @TODO: make these options based on the same assets qualities above:\n      \"normal\" | \"high\" | \"best\"\n    */\n    this.resolutionSettings = {\n      lowDpi: '256',\n      highDpi: '512',\n    };\n    this.ch = this.offsetHeight * 0.01;\n    this.cw = this.offsetWidth * 0.01;\n    loadFonts();\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    ro.observe(this);\n    this.getViewProtoData();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    ro.unobserve(this);\n  }\n\n  fetchProtoData() {\n    this.loading = true;\n    return fetch(`//api.godsunchained.com/v0/proto/${this.protoId}`).then(\n      resp => resp.json(),\n    );\n  }\n\n  handleResize(event) {\n    this.ch = event.borderBoxSize.blockSize * 0.01;\n    this.cw = event.borderBoxSize.inlineSize * 0.01;\n    this.requestUpdate();\n  }\n\n  getViewProtoData() {\n    if (this.useHiResAssets) {\n      this.resolutionSettings = {\n        lowDpi: '512',\n        highDpi: '1024',\n      };\n    }\n    this.qualityName = qualities[this.quality];\n    if (this.protoId) {\n      this.getProtoDataFromApi();\n    } else if (this.inputProtoData) {\n      this.getProtoDataFromInput();\n    }\n  }\n\n  getProtoDataFromApi() {\n    return this.fetchProtoData().then(data => {\n      const { id, type, attack, health, effect, name, rarity, god } = data;\n      this.protoCardData = {\n        id,\n        type,\n        attack: attack.Int64,\n        health: health.Int64,\n        effect,\n        name,\n        rarity,\n        god,\n      };\n      this.loading = false;\n      this.requestUpdate();\n      return data;\n    });\n  }\n\n  getProtoDataFromInput() {\n    this.protoCardData = { ...this.inputProtoData };\n    this.protoId = this.inputProtoData.id;\n    this.loading = false;\n  }\n\n  render() {\n    const isMythicCard = this.qualityName === 'mythic';\n    return html`\n      ${this.loading\n        ? loadingTemplate()\n        : html`\n            ${baseArtworkLayersTemplate({\n              useHiResAssets: this.useHiResAssets,\n              resolutionSettings: this.resolutionSettings,\n              protoId: this.protoId,\n            })}\n            ${isMythicCard\n              ? mythicImageLayersTemplate({\n                  type: this.protoCardData.type,\n                  resolutionSettings: this.resolutionSettings,\n                  qualityName: this.qualityName,\n                })\n              : nonMythicImageLayersTemplate({\n                  resolutionSettings: this.resolutionSettings,\n                  qualityName: this.qualityName,\n                  ...this.protoCardData,\n                })}\n            ${textLayersTemplate({\n              ch: this.ch,\n              cw: this.cw,\n              ...this.protoCardData,\n            })}\n          `}\n    `;\n  }\n}\n\n// Register the new element with the browser.\ncustomElements.define('composited-card', CompositedCard);\n"]}